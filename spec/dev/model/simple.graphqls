"A supehero"
type Hero @rootEntity {
    "The hero's screen name"
    name: String
    age: Int @defaultValue(value: 42)
    nickNames: [String]
    movies: [Movie] @relation(inverseOf: "heroes")
    skills: [Skill]
    suit: Suit
    morality: Morality
    country: Country @reference
    missions: [Mission]
    info: JSON
}

"A heroic mission"
type Mission @childEntity {
    date: DateTime
    title: String
}

"A special skill of a superhero"
type Skill @valueObject {
    description: String
    "A value between 0 and 11"
    strength: Float
    skills: [Skill]
}

"A superhero movie"
type Movie @rootEntity(quickSearchIndex:true, globalQuickSearch: true) {
    name: String @quickSearchIndex(searchable: true, languages:[DE])
    "All the heroes starring in this movie"
    heroes: [Hero] @relation
    "The real superhero"
    director: Director @relation
}

"A movie director"
type Director @rootEntity {
    name: String
    movies: [Movie] @relation(inverseOf: "director")
}

"A description of a hero suit"
type Suit @entityExtension {
    "The dominant color of the suit"
    color: String
}

type Country @rootEntity {
    isoCode: String @key
}

enum Morality {
    GOOD
    EVIL
}

type Delivery @namespace(name: "logistics.delivery") @rootEntity {
    name: String
}
