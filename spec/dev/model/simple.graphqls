"A supehero"
type Hero @rootEntity {
    "The hero's screen name"
    name: String @unique
    age: Int @defaultValue(value: 42)
    nickNames: [String]
    movies: [Movie] @relation(inverseOf: "heroes")
    skills: [Skill]
    suit: Suit
    morality: Morality
    countryISOCode: String
    country: Country @reference(keyField: "countryISOCode")
    missions: [Mission]
    friends: [Hero] @relation
    moreFriends: [Hero] @traversal(path: "friends{0,2}")
    subMissions: [Mission] @traversal(path: "missions.subMissions")
    missionsAgain: [Mission] @traversal(path: "missions")
    info: JSON
    deepSkills: [Skill] @traversal(path: "skills.skills")
}

"A heroic mission"
type Mission @childEntity {
    date: DateTime
    title: String
    subMissions: [Mission]
}

"A special skill of a superhero"
type Skill @valueObject {
    description: String
    "A value between 0 and 11"
    strength: Float
    skills: [Skill]
}

"A superhero movie"
type Movie @rootEntity {
    name: String
    "All the heroes starring in this movie"
    heroes: [Hero] @relation
    "The real superhero"
    director: Director @relation
    publisher: Publisher @reference

    relatedMovies: [Movie] @traversal(path: "heroes.movies")
    community: [Hero] @traversal(path: "heroes.friends{0,2}")
    subMissions: [Mission] @traversal(path: "heroes.friends{0,2}.missions.subMissions")
    skillCount: Int @aggregation(path: "heroes.skills", aggregator: COUNT)
    totalSkillStrength: Float @aggregation(path: "heroes.skills.strength", aggregator: SUM)
}

"A movie director"
type Director @rootEntity {
    name: String
    movies: [Movie] @relation(inverseOf: "director")
}

"A description of a hero suit"
type Suit @entityExtension {
    "The dominant color of the suit"
    color: String
}

type Country @rootEntity {
    isoCode: String @key
    name: String
}

type Publisher @rootEntity {
    identCode: String @key
    name: String
}

enum Morality {
    GOOD
    EVIL
}

type Delivery @namespace(name: "logistics.delivery") @rootEntity {
    name: String
}
