{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "BillingEntity",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isExported",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "exportedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DateTime",
          "description": "The `DateTime` scalar type represents a point in time in UTC, in a format specified by ISO 8601, such as `2007-12-03T10:15:30Z` or `2007-12-03T10:15:30.123Z`.\n\nThis scalar type rejects values without timezone specifier or with a timezone other than UTC. See also `LocalDate` and `LocalTime` for values without timezone specifier. To store Date/time values with timezones other than UTC, define a value object type with the fields you need.\n\nThe *second* part is added if not specified, e.g. `2007-12-03T12:34Z` is converted to `2007-12-03T12:34:00Z`. Second fraction digits are cut off at the nearest three-digit group, e.g. `2007-12-03T00:00:00.1234Z` is converted to `2007-12-03T00:00:00.123400Z`.\n\nValues with leap seconds are shifted back by one second, but this behavior should not be relied upon.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "BillingEntityFilter",
          "description": "Filter type for BillingEntity.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "Checks if `key` equals a specified string, case-sensitively.\n\nIf an index exists on `key`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "key_not",
              "description": "Checks if `key` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_in",
              "description": "Checks if `key` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "key_not_in",
              "description": "Checks if `key` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "key_lt",
              "description": "Checks if `key` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_lte",
              "description": "Checks if `key` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_gt",
              "description": "Checks if `key` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_gte",
              "description": "Checks if `key` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_contains",
              "description": "Checks if `key` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_not_contains",
              "description": "Checks if `key` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_starts_with",
              "description": "Checks if `key` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "key_not_starts_with",
              "description": "Checks if `key` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "key_ends_with",
              "description": "Checks if `key` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_not_ends_with",
              "description": "Checks if `key` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_like",
              "description": "Matches `key` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `key`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "key_not_like",
              "description": "Checks if `key` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Checks if `type` equals a specified string, case-sensitively.\n\nIf an index exists on `type`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "type_not",
              "description": "Checks if `type` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "type_in",
              "description": "Checks if `type` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "type_not_in",
              "description": "Checks if `type` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "type_lt",
              "description": "Checks if `type` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "type_lte",
              "description": "Checks if `type` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "type_gt",
              "description": "Checks if `type` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "type_gte",
              "description": "Checks if `type` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "type_contains",
              "description": "Checks if `type` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "type_not_contains",
              "description": "Checks if `type` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "type_starts_with",
              "description": "Checks if `type` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "type_not_starts_with",
              "description": "Checks if `type` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "type_ends_with",
              "description": "Checks if `type` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "type_not_ends_with",
              "description": "Checks if `type` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "type_like",
              "description": "Matches `type` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `type`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "type_not_like",
              "description": "Checks if `type` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport",
              "description": "Checks if `isConfirmedForExport` equals a specified value.\n\nIf an index exists on `isConfirmedForExport`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport_not",
              "description": "Checks if `isConfirmedForExport` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "isExported",
              "description": "Checks if `isExported` equals a specified value.\n\nIf an index exists on `isExported`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "isExported_not",
              "description": "Checks if `isExported` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt",
              "description": "Checks if `confirmedForExportAt` equals a specified value.\n\nIf an index exists on `confirmedForExportAt`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_not",
              "description": "Checks if `confirmedForExportAt` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_in",
              "description": "Checks if `confirmedForExportAt` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_not_in",
              "description": "Checks if `confirmedForExportAt` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_lt",
              "description": "Checks if `confirmedForExportAt` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_lte",
              "description": "Checks if `confirmedForExportAt` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_gt",
              "description": "Checks if `confirmedForExportAt` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt_gte",
              "description": "Checks if `confirmedForExportAt` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt",
              "description": "Checks if `exportedAt` equals a specified value.\n\nIf an index exists on `exportedAt`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_not",
              "description": "Checks if `exportedAt` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_in",
              "description": "Checks if `exportedAt` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_not_in",
              "description": "Checks if `exportedAt` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_lt",
              "description": "Checks if `exportedAt` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_lte",
              "description": "Checks if `exportedAt` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_gt",
              "description": "Checks if `exportedAt` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "exportedAt_gte",
              "description": "Checks if `exportedAt` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "BillingEntityOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "_QueryMeta",
          "description": "Provides aggregated information about a collection or list",
          "fields": [
            {
              "name": "count",
              "description": "The number of items in the collection or list, after applying the filter if specified.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Country",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "isoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_descriptionMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "descriptionI18nString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalInvestment",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Translation",
          "description": null,
          "fields": [
            {
              "name": "languageIsoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "translation",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "TranslationFilter",
          "description": "Filter type for Translation.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "languageIsoCode",
              "description": "Checks if `languageIsoCode` equals a specified string, case-sensitively.\n\nIf an index exists on `languageIsoCode`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not",
              "description": "Checks if `languageIsoCode` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_in",
              "description": "Checks if `languageIsoCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not_in",
              "description": "Checks if `languageIsoCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_lt",
              "description": "Checks if `languageIsoCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_lte",
              "description": "Checks if `languageIsoCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_gt",
              "description": "Checks if `languageIsoCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_gte",
              "description": "Checks if `languageIsoCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_contains",
              "description": "Checks if `languageIsoCode` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not_contains",
              "description": "Checks if `languageIsoCode` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_starts_with",
              "description": "Checks if `languageIsoCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not_starts_with",
              "description": "Checks if `languageIsoCode` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_ends_with",
              "description": "Checks if `languageIsoCode` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not_ends_with",
              "description": "Checks if `languageIsoCode` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_like",
              "description": "Matches `languageIsoCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `languageIsoCode`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "languageIsoCode_not_like",
              "description": "Checks if `languageIsoCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "translation",
              "description": "Checks if `translation` equals a specified string, case-sensitively.\n\nIf an index exists on `translation`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "translation_not",
              "description": "Checks if `translation` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "translation_in",
              "description": "Checks if `translation` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "translation_not_in",
              "description": "Checks if `translation` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "translation_lt",
              "description": "Checks if `translation` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "translation_lte",
              "description": "Checks if `translation` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "translation_gt",
              "description": "Checks if `translation` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "translation_gte",
              "description": "Checks if `translation` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "translation_contains",
              "description": "Checks if `translation` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "translation_not_contains",
              "description": "Checks if `translation` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "translation_starts_with",
              "description": "Checks if `translation` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "translation_not_starts_with",
              "description": "Checks if `translation` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "translation_ends_with",
              "description": "Checks if `translation` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "translation_not_ends_with",
              "description": "Checks if `translation` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "translation_like",
              "description": "Matches `translation` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `translation`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "translation_not_like",
              "description": "Checks if `translation` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "TranslationOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "I18nString",
          "description": "The \"I18nString\" scalar type represents an internationalized string.\n\n    Structurally, the \"I18nString`\" type is equivalent to the \"StringMap\" type. Keys are ISO 639-1 language codes, and values are the localized strings. In the future, more specific features may be added to this type, so it is preferred over the \"StringMap\" type to represent internationalized strings.\n\n    Values are *not* additionally JSON-encoded or JSON-parsed, so e.g. pass a raw JSON object here instead of a JSON-representation of that object.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "CountryFilter",
          "description": "Filter type for Country.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "isoCode",
              "description": "Checks if `isoCode` equals a specified string, case-sensitively.\n\nIf an index exists on `isoCode`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not",
              "description": "Checks if `isoCode` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_in",
              "description": "Checks if `isoCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_in",
              "description": "Checks if `isoCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_lt",
              "description": "Checks if `isoCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_lte",
              "description": "Checks if `isoCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_gt",
              "description": "Checks if `isoCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_gte",
              "description": "Checks if `isoCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_contains",
              "description": "Checks if `isoCode` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_contains",
              "description": "Checks if `isoCode` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_starts_with",
              "description": "Checks if `isoCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_starts_with",
              "description": "Checks if `isoCode` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_ends_with",
              "description": "Checks if `isoCode` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_ends_with",
              "description": "Checks if `isoCode` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_like",
              "description": "Matches `isoCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `isoCode`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_like",
              "description": "Checks if `isoCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "description_some",
              "description": "Makes sure at least one of the items in \"description\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "description_every",
              "description": "Makes sure all items in `description` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "description_none",
              "description": "Makes sure none of the items in `description` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has no items.",
              "deprecationReason": null
            },
            {
              "name": "description_empty",
              "description": "Checks if `description` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "descriptionI18nString_some",
              "description": "Makes sure at least one of the entries in \"descriptionI18nString\" has a value that matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `descriptionI18nString` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment",
              "description": "Checks if `totalInvestment` equals a specified string, case-sensitively.\n\nIf an index exists on `totalInvestment`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not",
              "description": "Checks if `totalInvestment` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_in",
              "description": "Checks if `totalInvestment` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not_in",
              "description": "Checks if `totalInvestment` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_lt",
              "description": "Checks if `totalInvestment` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_lte",
              "description": "Checks if `totalInvestment` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_gt",
              "description": "Checks if `totalInvestment` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_gte",
              "description": "Checks if `totalInvestment` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_contains",
              "description": "Checks if `totalInvestment` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not_contains",
              "description": "Checks if `totalInvestment` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_starts_with",
              "description": "Checks if `totalInvestment` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not_starts_with",
              "description": "Checks if `totalInvestment` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_ends_with",
              "description": "Checks if `totalInvestment` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not_ends_with",
              "description": "Checks if `totalInvestment` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_like",
              "description": "Matches `totalInvestment` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `totalInvestment`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "totalInvestment_not_like",
              "description": "Checks if `totalInvestment` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": "Checks if `someKey` equals a specified string, case-sensitively.\n\nIf an index exists on `someKey`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not",
              "description": "Checks if `someKey` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_in",
              "description": "Checks if `someKey` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_in",
              "description": "Checks if `someKey` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "someKey_lt",
              "description": "Checks if `someKey` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_lte",
              "description": "Checks if `someKey` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_gt",
              "description": "Checks if `someKey` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_gte",
              "description": "Checks if `someKey` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_contains",
              "description": "Checks if `someKey` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_contains",
              "description": "Checks if `someKey` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_starts_with",
              "description": "Checks if `someKey` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_starts_with",
              "description": "Checks if `someKey` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "someKey_ends_with",
              "description": "Checks if `someKey` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_ends_with",
              "description": "Checks if `someKey` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_like",
              "description": "Matches `someKey` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `someKey`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_like",
              "description": "Checks if `someKey` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "I18nStringEntryFilter",
          "description": "Filter type for entries in a I18nString.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "language",
              "description": "Checks if `language` equals a specified string, case-sensitively.\n\nIf an index exists on `language`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "language_not",
              "description": "Checks if `language` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "language_in",
              "description": "Checks if `language` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "language_not_in",
              "description": "Checks if `language` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "language_lt",
              "description": "Checks if `language` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "language_lte",
              "description": "Checks if `language` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "language_gt",
              "description": "Checks if `language` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "language_gte",
              "description": "Checks if `language` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "language_contains",
              "description": "Checks if `language` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "language_not_contains",
              "description": "Checks if `language` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "language_starts_with",
              "description": "Checks if `language` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "language_not_starts_with",
              "description": "Checks if `language` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "language_ends_with",
              "description": "Checks if `language` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "language_not_ends_with",
              "description": "Checks if `language` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "language_like",
              "description": "Matches `language` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `language`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "language_not_like",
              "description": "Checks if `language` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Checks if `value` equals a specified string, case-sensitively.\n\nIf an index exists on `value`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "value_not",
              "description": "Checks if `value` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_in",
              "description": "Checks if `value` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "value_not_in",
              "description": "Checks if `value` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "value_lt",
              "description": "Checks if `value` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_lte",
              "description": "Checks if `value` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_gt",
              "description": "Checks if `value` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_gte",
              "description": "Checks if `value` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_contains",
              "description": "Checks if `value` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_not_contains",
              "description": "Checks if `value` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_starts_with",
              "description": "Checks if `value` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "value_not_starts_with",
              "description": "Checks if `value` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "value_ends_with",
              "description": "Checks if `value` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_not_ends_with",
              "description": "Checks if `value` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_like",
              "description": "Matches `value` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `value`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "value_not_like",
              "description": "Checks if `value` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CountryOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "CountryFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "isoCode",
              "description": "Checks if `isoCode` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not",
              "description": "Checks if `isoCode` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_lt",
              "description": "Checks if `isoCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_lte",
              "description": "Checks if `isoCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_gt",
              "description": "Checks if `isoCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_gte",
              "description": "Checks if `isoCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_in",
              "description": "Checks if `isoCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_in",
              "description": "Checks if `isoCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_starts_with",
              "description": "Checks if `isoCode` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "isoCode_not_starts_with",
              "description": "Checks if `isoCode` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": "Checks if `someKey` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not",
              "description": "Checks if `someKey` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_lt",
              "description": "Checks if `someKey` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_lte",
              "description": "Checks if `someKey` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_gt",
              "description": "Checks if `someKey` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_gte",
              "description": "Checks if `someKey` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "someKey_in",
              "description": "Checks if `someKey` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_in",
              "description": "Checks if `someKey` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "someKey_starts_with",
              "description": "Checks if `someKey` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "someKey_not_starts_with",
              "description": "Checks if `someKey` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "Delivery",
          "description": "A delivery",
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee",
              "deprecationReason": null
            },
            {
              "name": "contentInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_contentInfoMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_itemsMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "handlingUnits",
              "description": "The handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "_handlingUnitsMeta",
              "description": "The handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "destinationCountry",
              "description": "The country to where the delivery should be shipped\n\nThis field references a `Country` by its `isoCode` field",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "originCountry",
              "description": "This field references a `Country` by its `isoCode` field",
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalValue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "forwarder",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dynamicData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecatedField",
              "description": null,
              "deprecationReason": "do not use"
            },
            {
              "name": "enumWithDeprecation",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Address",
          "description": null,
          "fields": [
            {
              "name": "street",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "city",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "zipCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "This field references a `Country` by its `isoCode` field",
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DangerousGoodsInfo",
          "description": null,
          "fields": [
            {
              "name": "unNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "flashpoint",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "notices",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "details",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DangerousGoodsDetails",
          "description": null,
          "fields": [
            {
              "name": "expiryDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "LocalDate",
          "description": "The `LocalDate` scalar type represents a date without time zone in a format specified by ISO 8601, such as 2007-12-03.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryItem",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "itemNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "weightInKg",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "handlingUnit",
              "description": "This field references a `HandlingUnit` by its `id` field",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "HandlingUnit",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "huNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "delivery",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DeliveryItemFilter",
          "description": "Filter type for DeliveryItem.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "itemNumber",
              "description": "Checks if `itemNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `itemNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not",
              "description": "Checks if `itemNumber` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_in",
              "description": "Checks if `itemNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_in",
              "description": "Checks if `itemNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_lt",
              "description": "Checks if `itemNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_lte",
              "description": "Checks if `itemNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_gt",
              "description": "Checks if `itemNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_gte",
              "description": "Checks if `itemNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains",
              "description": "Checks if `itemNumber` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains",
              "description": "Checks if `itemNumber` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_starts_with",
              "description": "Checks if `itemNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_starts_with",
              "description": "Checks if `itemNumber` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_ends_with",
              "description": "Checks if `itemNumber` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_ends_with",
              "description": "Checks if `itemNumber` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_like",
              "description": "Matches `itemNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `itemNumber`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_like",
              "description": "Checks if `itemNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "Checks if `quantity` equals a specified value.\n\nIf an index exists on `quantity`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "quantity_not",
              "description": "Checks if `quantity` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "quantity_in",
              "description": "Checks if `quantity` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "quantity_not_in",
              "description": "Checks if `quantity` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "quantity_lt",
              "description": "Checks if `quantity` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_lte",
              "description": "Checks if `quantity` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_gt",
              "description": "Checks if `quantity` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_gte",
              "description": "Checks if `quantity` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg",
              "description": "Checks if `weightInKg` equals a specified value.\n\nIf an index exists on `weightInKg`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_not",
              "description": "Checks if `weightInKg` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_in",
              "description": "Checks if `weightInKg` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_not_in",
              "description": "Checks if `weightInKg` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_lt",
              "description": "Checks if `weightInKg` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_lte",
              "description": "Checks if `weightInKg` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_gt",
              "description": "Checks if `weightInKg` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "weightInKg_gte",
              "description": "Checks if `weightInKg` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "handlingUnit",
              "description": "Filters the through `id` referenced HandlingUnits that fulfills the given requirements.\n\n Checks if `handlingUnit` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "Allows to filter on the fields of `dgInfo`.\n\nNote that `dgInfo` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "description_some",
              "description": "Makes sure at least one of the entries in \"description\" has a value that matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "HandlingUnitFilter",
          "description": "Filter type for HandlingUnit.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "huNumber",
              "description": "Checks if `huNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `huNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not",
              "description": "Checks if `huNumber` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_in",
              "description": "Checks if `huNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_in",
              "description": "Checks if `huNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_lt",
              "description": "Checks if `huNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_lte",
              "description": "Checks if `huNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_gt",
              "description": "Checks if `huNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_gte",
              "description": "Checks if `huNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_contains",
              "description": "Checks if `huNumber` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_contains",
              "description": "Checks if `huNumber` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_starts_with",
              "description": "Checks if `huNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_starts_with",
              "description": "Checks if `huNumber` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_ends_with",
              "description": "Checks if `huNumber` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_ends_with",
              "description": "Checks if `huNumber` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_like",
              "description": "Matches `huNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `huNumber`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_like",
              "description": "Checks if `huNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "delivery",
              "description": "Checks if `delivery` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "DeliveryFilter",
          "description": "Filter type for Delivery.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber",
              "description": "Checks if `deliveryNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `deliveryNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not",
              "description": "Checks if `deliveryNumber` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_in",
              "description": "Checks if `deliveryNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_in",
              "description": "Checks if `deliveryNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_lt",
              "description": "Checks if `deliveryNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_lte",
              "description": "Checks if `deliveryNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_gt",
              "description": "Checks if `deliveryNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_gte",
              "description": "Checks if `deliveryNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_contains",
              "description": "Checks if `deliveryNumber` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_contains",
              "description": "Checks if `deliveryNumber` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_starts_with",
              "description": "Checks if `deliveryNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_starts_with",
              "description": "Checks if `deliveryNumber` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_ends_with",
              "description": "Checks if `deliveryNumber` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_ends_with",
              "description": "Checks if `deliveryNumber` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_like",
              "description": "Matches `deliveryNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `deliveryNumber`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_like",
              "description": "Checks if `deliveryNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_some",
              "description": "Makes sure at least one of the items in \"serialNumbers\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `serialNumbers` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_every",
              "description": "Makes sure all items in `serialNumbers` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_none",
              "description": "Makes sure none of the items in `serialNumbers` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `serialNumbers` has no items.",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_empty",
              "description": "Checks if `serialNumbers` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "Checks if `consignee` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "contentInfo_some",
              "description": "Makes sure at least one of the items in \"contentInfo\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `contentInfo` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "contentInfo_every",
              "description": "Makes sure all items in `contentInfo` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "contentInfo_none",
              "description": "Makes sure none of the items in `contentInfo` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `contentInfo` has no items.",
              "deprecationReason": null
            },
            {
              "name": "contentInfo_empty",
              "description": "Checks if `contentInfo` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "Allows to filter on the fields of `dgInfo`.\n\nNote that `dgInfo` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "items_some",
              "description": "Makes sure at least one of the items in \"items\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `items` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "items_every",
              "description": "Makes sure all items in `items` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "items_none",
              "description": "Makes sure none of the items in `items` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `items` has no items.",
              "deprecationReason": null
            },
            {
              "name": "items_empty",
              "description": "Checks if `items` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "handlingUnits_some",
              "description": "Makes sure at least one of the items in \"handlingUnits\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `handlingUnits` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "handlingUnits_every",
              "description": "Makes sure all items in `handlingUnits` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "handlingUnits_none",
              "description": "Makes sure none of the items in `handlingUnits` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `handlingUnits` has no items.",
              "deprecationReason": null
            },
            {
              "name": "handlingUnits_empty",
              "description": "Checks if `handlingUnits` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "destinationCountry",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `destinationCountry` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Checks if `destinationCountryISOCode` equals a specified string, case-sensitively.\n\nIf an index exists on `destinationCountryISOCode`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not",
              "description": "Checks if `destinationCountryISOCode` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_in",
              "description": "Checks if `destinationCountryISOCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_in",
              "description": "Checks if `destinationCountryISOCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_lt",
              "description": "Checks if `destinationCountryISOCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_lte",
              "description": "Checks if `destinationCountryISOCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_gt",
              "description": "Checks if `destinationCountryISOCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_gte",
              "description": "Checks if `destinationCountryISOCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_contains",
              "description": "Checks if `destinationCountryISOCode` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_contains",
              "description": "Checks if `destinationCountryISOCode` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_starts_with",
              "description": "Checks if `destinationCountryISOCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_starts_with",
              "description": "Checks if `destinationCountryISOCode` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_ends_with",
              "description": "Checks if `destinationCountryISOCode` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_ends_with",
              "description": "Checks if `destinationCountryISOCode` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_like",
              "description": "Matches `destinationCountryISOCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `destinationCountryISOCode`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_like",
              "description": "Checks if `destinationCountryISOCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": "Checks if `completionDate` equals a specified value.\n\nIf an index exists on `completionDate`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_not",
              "description": "Checks if `completionDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "completionDate_in",
              "description": "Checks if `completionDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_not_in",
              "description": "Checks if `completionDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_lt",
              "description": "Checks if `completionDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_lte",
              "description": "Checks if `completionDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_gt",
              "description": "Checks if `completionDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_gte",
              "description": "Checks if `completionDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "originCountry",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `originCountry` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": "Checks if `shippedAt` equals a specified value.\n\nIf an index exists on `shippedAt`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_not",
              "description": "Checks if `shippedAt` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_in",
              "description": "Checks if `shippedAt` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_not_in",
              "description": "Checks if `shippedAt` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_lt",
              "description": "Checks if `shippedAt` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_lte",
              "description": "Checks if `shippedAt` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_gt",
              "description": "Checks if `shippedAt` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "shippedAt_gte",
              "description": "Checks if `shippedAt` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalValue",
              "description": "Checks if `totalValue` equals a specified string, case-sensitively.\n\nIf an index exists on `totalValue`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not",
              "description": "Checks if `totalValue` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_in",
              "description": "Checks if `totalValue` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not_in",
              "description": "Checks if `totalValue` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_lt",
              "description": "Checks if `totalValue` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_lte",
              "description": "Checks if `totalValue` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_gt",
              "description": "Checks if `totalValue` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_gte",
              "description": "Checks if `totalValue` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_contains",
              "description": "Checks if `totalValue` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not_contains",
              "description": "Checks if `totalValue` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_starts_with",
              "description": "Checks if `totalValue` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not_starts_with",
              "description": "Checks if `totalValue` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_ends_with",
              "description": "Checks if `totalValue` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not_ends_with",
              "description": "Checks if `totalValue` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "totalValue_like",
              "description": "Matches `totalValue` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `totalValue`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "totalValue_not_like",
              "description": "Checks if `totalValue` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "forwarder",
              "description": "Checks if `forwarder` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": "Checks if `destination` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString",
              "description": "Checks if `defaultValueString` equals a specified string, case-sensitively.\n\nIf an index exists on `defaultValueString`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not",
              "description": "Checks if `defaultValueString` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_in",
              "description": "Checks if `defaultValueString` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not_in",
              "description": "Checks if `defaultValueString` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_lt",
              "description": "Checks if `defaultValueString` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_lte",
              "description": "Checks if `defaultValueString` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_gt",
              "description": "Checks if `defaultValueString` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_gte",
              "description": "Checks if `defaultValueString` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_contains",
              "description": "Checks if `defaultValueString` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not_contains",
              "description": "Checks if `defaultValueString` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_starts_with",
              "description": "Checks if `defaultValueString` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not_starts_with",
              "description": "Checks if `defaultValueString` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_ends_with",
              "description": "Checks if `defaultValueString` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not_ends_with",
              "description": "Checks if `defaultValueString` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_like",
              "description": "Matches `defaultValueString` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `defaultValueString`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString_not_like",
              "description": "Checks if `defaultValueString` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2",
              "description": "Checks if `defaultValueString2` equals a specified string, case-sensitively.\n\nIf an index exists on `defaultValueString2`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not",
              "description": "Checks if `defaultValueString2` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_in",
              "description": "Checks if `defaultValueString2` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not_in",
              "description": "Checks if `defaultValueString2` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_lt",
              "description": "Checks if `defaultValueString2` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_lte",
              "description": "Checks if `defaultValueString2` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_gt",
              "description": "Checks if `defaultValueString2` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_gte",
              "description": "Checks if `defaultValueString2` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_contains",
              "description": "Checks if `defaultValueString2` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not_contains",
              "description": "Checks if `defaultValueString2` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_starts_with",
              "description": "Checks if `defaultValueString2` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not_starts_with",
              "description": "Checks if `defaultValueString2` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_ends_with",
              "description": "Checks if `defaultValueString2` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not_ends_with",
              "description": "Checks if `defaultValueString2` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_like",
              "description": "Matches `defaultValueString2` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `defaultValueString2`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2_not_like",
              "description": "Checks if `defaultValueString2` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt",
              "description": "Checks if `defaultValueInt` equals a specified value.\n\nIf an index exists on `defaultValueInt`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_not",
              "description": "Checks if `defaultValueInt` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_in",
              "description": "Checks if `defaultValueInt` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_not_in",
              "description": "Checks if `defaultValueInt` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_lt",
              "description": "Checks if `defaultValueInt` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_lte",
              "description": "Checks if `defaultValueInt` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_gt",
              "description": "Checks if `defaultValueInt` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt_gte",
              "description": "Checks if `defaultValueInt` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue",
              "description": "Checks if `defaultValueTrue` equals a specified value.\n\nIf an index exists on `defaultValueTrue`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue_not",
              "description": "Checks if `defaultValueTrue` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse",
              "description": "Checks if `defaultValueFalse` equals a specified value.\n\nIf an index exists on `defaultValueFalse`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse_not",
              "description": "Checks if `defaultValueFalse` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat",
              "description": "Checks if `defaultValueFloat` equals a specified value.\n\nIf an index exists on `defaultValueFloat`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_not",
              "description": "Checks if `defaultValueFloat` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_in",
              "description": "Checks if `defaultValueFloat` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_not_in",
              "description": "Checks if `defaultValueFloat` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_lt",
              "description": "Checks if `defaultValueFloat` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_lte",
              "description": "Checks if `defaultValueFloat` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_gt",
              "description": "Checks if `defaultValueFloat` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat_gte",
              "description": "Checks if `defaultValueFloat` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum",
              "description": "Checks if `defaultValueEnum` equals a specified value.\n\nIf an index exists on `defaultValueEnum`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum_not",
              "description": "Checks if `defaultValueEnum` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum_in",
              "description": "Checks if `defaultValueEnum` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum_not_in",
              "description": "Checks if `defaultValueEnum` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": "Checks if `dispatchDate` equals a specified value.\n\nIf an index exists on `dispatchDate`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_not",
              "description": "Checks if `dispatchDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_in",
              "description": "Checks if `dispatchDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_not_in",
              "description": "Checks if `dispatchDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_lt",
              "description": "Checks if `dispatchDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_lte",
              "description": "Checks if `dispatchDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_gt",
              "description": "Checks if `dispatchDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_gte",
              "description": "Checks if `dispatchDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate",
              "description": "Checks if `pickupDate` equals a specified value.\n\nIf an index exists on `pickupDate`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_not",
              "description": "Checks if `pickupDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_in",
              "description": "Checks if `pickupDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_not_in",
              "description": "Checks if `pickupDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_lt",
              "description": "Checks if `pickupDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_lte",
              "description": "Checks if `pickupDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_gt",
              "description": "Checks if `pickupDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupDate_gte",
              "description": "Checks if `pickupDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart",
              "description": "Checks if `pickupTimeStart` equals a specified value.\n\nIf an index exists on `pickupTimeStart`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_not",
              "description": "Checks if `pickupTimeStart` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_in",
              "description": "Checks if `pickupTimeStart` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_not_in",
              "description": "Checks if `pickupTimeStart` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_lt",
              "description": "Checks if `pickupTimeStart` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_lte",
              "description": "Checks if `pickupTimeStart` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_gt",
              "description": "Checks if `pickupTimeStart` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart_gte",
              "description": "Checks if `pickupTimeStart` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd",
              "description": "Checks if `pickupTimeEnd` equals a specified value.\n\nIf an index exists on `pickupTimeEnd`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_not",
              "description": "Checks if `pickupTimeEnd` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_in",
              "description": "Checks if `pickupTimeEnd` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_not_in",
              "description": "Checks if `pickupTimeEnd` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_lt",
              "description": "Checks if `pickupTimeEnd` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_lte",
              "description": "Checks if `pickupTimeEnd` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_gt",
              "description": "Checks if `pickupTimeEnd` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd_gte",
              "description": "Checks if `pickupTimeEnd` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Checks if `description` equals a specified string, case-sensitively.\n\nIf an index exists on `description`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "description_not",
              "description": "Checks if `description` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "description_in",
              "description": "Checks if `description` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "description_not_in",
              "description": "Checks if `description` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "description_lt",
              "description": "Checks if `description` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description_lte",
              "description": "Checks if `description` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description_gt",
              "description": "Checks if `description` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description_gte",
              "description": "Checks if `description` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description_contains",
              "description": "Checks if `description` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains",
              "description": "Checks if `description` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "description_starts_with",
              "description": "Checks if `description` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "description_not_starts_with",
              "description": "Checks if `description` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "description_ends_with",
              "description": "Checks if `description` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "description_not_ends_with",
              "description": "Checks if `description` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "description_like",
              "description": "Matches `description` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `description`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "description_not_like",
              "description": "Checks if `description` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": "Allows to filter on the fields of `colorData`.\n\nNote that `colorData` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": "Checks if `enumFlexSearch` equals a specified value.\n\nIf an index exists on `enumFlexSearch`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_not",
              "description": "Checks if `enumFlexSearch` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_in",
              "description": "Checks if `enumFlexSearch` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_not_in",
              "description": "Checks if `enumFlexSearch` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": "Checks if `aText` equals a specified string, case-sensitively.\n\nIf an index exists on `aText`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "aText_not",
              "description": "Checks if `aText` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_in",
              "description": "Checks if `aText` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_in",
              "description": "Checks if `aText` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText_lt",
              "description": "Checks if `aText` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_lte",
              "description": "Checks if `aText` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_gt",
              "description": "Checks if `aText` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_gte",
              "description": "Checks if `aText` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_contains",
              "description": "Checks if `aText` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_contains",
              "description": "Checks if `aText` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_starts_with",
              "description": "Checks if `aText` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_starts_with",
              "description": "Checks if `aText` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "aText_ends_with",
              "description": "Checks if `aText` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_ends_with",
              "description": "Checks if `aText` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_like",
              "description": "Matches `aText` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `aText`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "aText_not_like",
              "description": "Checks if `aText` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": "Checks if `aNumber` equals a specified value.\n\nIf an index exists on `aNumber`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_not",
              "description": "Checks if `aNumber` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "aNumber_in",
              "description": "Checks if `aNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_not_in",
              "description": "Checks if `aNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_lt",
              "description": "Checks if `aNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_lte",
              "description": "Checks if `aNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_gt",
              "description": "Checks if `aNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_gte",
              "description": "Checks if `aNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": "Checks if `recursion` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField",
              "description": "Checks if `deprecatedField` equals a specified string, case-sensitively.\n\nIf an index exists on `deprecatedField`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not",
              "description": "Checks if `deprecatedField` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_in",
              "description": "Checks if `deprecatedField` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not_in",
              "description": "Checks if `deprecatedField` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_lt",
              "description": "Checks if `deprecatedField` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_lte",
              "description": "Checks if `deprecatedField` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_gt",
              "description": "Checks if `deprecatedField` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_gte",
              "description": "Checks if `deprecatedField` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_contains",
              "description": "Checks if `deprecatedField` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not_contains",
              "description": "Checks if `deprecatedField` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_starts_with",
              "description": "Checks if `deprecatedField` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not_starts_with",
              "description": "Checks if `deprecatedField` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_ends_with",
              "description": "Checks if `deprecatedField` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not_ends_with",
              "description": "Checks if `deprecatedField` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_like",
              "description": "Matches `deprecatedField` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `deprecatedField`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "deprecatedField_not_like",
              "description": "Checks if `deprecatedField` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation",
              "description": "Checks if `enumWithDeprecation` equals a specified value.\n\nIf an index exists on `enumWithDeprecation`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation_not",
              "description": "Checks if `enumWithDeprecation` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation_in",
              "description": "Checks if `enumWithDeprecation` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation_not_in",
              "description": "Checks if `enumWithDeprecation` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": "Checks if `sometimesNull` equals a specified string, case-sensitively.\n\nIf an index exists on `sometimesNull`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not",
              "description": "Checks if `sometimesNull` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_in",
              "description": "Checks if `sometimesNull` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_in",
              "description": "Checks if `sometimesNull` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_lt",
              "description": "Checks if `sometimesNull` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_lte",
              "description": "Checks if `sometimesNull` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_gt",
              "description": "Checks if `sometimesNull` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_gte",
              "description": "Checks if `sometimesNull` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_contains",
              "description": "Checks if `sometimesNull` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_contains",
              "description": "Checks if `sometimesNull` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_starts_with",
              "description": "Checks if `sometimesNull` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_starts_with",
              "description": "Checks if `sometimesNull` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_ends_with",
              "description": "Checks if `sometimesNull` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_ends_with",
              "description": "Checks if `sometimesNull` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_like",
              "description": "Matches `sometimesNull` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `sometimesNull`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_like",
              "description": "Checks if `sometimesNull` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": "Checks if `caseInsensitiveField` equals a specified string, case-sensitively.\n\nIf an index exists on `caseInsensitiveField`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not",
              "description": "Checks if `caseInsensitiveField` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_in",
              "description": "Checks if `caseInsensitiveField` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_in",
              "description": "Checks if `caseInsensitiveField` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_lt",
              "description": "Checks if `caseInsensitiveField` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_lte",
              "description": "Checks if `caseInsensitiveField` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_gt",
              "description": "Checks if `caseInsensitiveField` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_gte",
              "description": "Checks if `caseInsensitiveField` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_contains",
              "description": "Checks if `caseInsensitiveField` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_contains",
              "description": "Checks if `caseInsensitiveField` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_starts_with",
              "description": "Checks if `caseInsensitiveField` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_starts_with",
              "description": "Checks if `caseInsensitiveField` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_ends_with",
              "description": "Checks if `caseInsensitiveField` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_ends_with",
              "description": "Checks if `caseInsensitiveField` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_like",
              "description": "Matches `caseInsensitiveField` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `caseInsensitiveField`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_like",
              "description": "Checks if `caseInsensitiveField` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "StringFilter",
          "description": "Filter type for String.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "equal",
              "description": "Checks if the value equals a specified string, case-sensitively.\n\nIf an index exists on the value, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "not",
              "description": "Checks if the value does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "in",
              "description": "Checks if the value is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "not_in",
              "description": "Checks if the value is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "lt",
              "description": "Checks if the value is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "lte",
              "description": "Checks if the value is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "gt",
              "description": "Checks if the value is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "gte",
              "description": "Checks if the value is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "contains",
              "description": "Checks if the value contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "not_contains",
              "description": "Checks if the value does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "starts_with",
              "description": "Checks if the value starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "not_starts_with",
              "description": "Checks if the value does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "ends_with",
              "description": "Checks if the value ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "not_ends_with",
              "description": "Checks if the value does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "like",
              "description": "Matches the value against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on the value, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "not_like",
              "description": "Checks if the value does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "AddressFilter",
          "description": "Filter type for Address.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "street",
              "description": "Checks if `street` equals a specified string, case-sensitively.\n\nIf an index exists on `street`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "street_not",
              "description": "Checks if `street` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "street_in",
              "description": "Checks if `street` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "street_not_in",
              "description": "Checks if `street` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "street_lt",
              "description": "Checks if `street` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "street_lte",
              "description": "Checks if `street` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "street_gt",
              "description": "Checks if `street` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "street_gte",
              "description": "Checks if `street` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "street_contains",
              "description": "Checks if `street` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "street_not_contains",
              "description": "Checks if `street` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "street_starts_with",
              "description": "Checks if `street` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "street_not_starts_with",
              "description": "Checks if `street` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "street_ends_with",
              "description": "Checks if `street` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "street_not_ends_with",
              "description": "Checks if `street` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "street_like",
              "description": "Matches `street` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `street`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "street_not_like",
              "description": "Checks if `street` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "city",
              "description": "Checks if `city` equals a specified string, case-sensitively.\n\nIf an index exists on `city`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "city_not",
              "description": "Checks if `city` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_in",
              "description": "Checks if `city` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "city_not_in",
              "description": "Checks if `city` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "city_lt",
              "description": "Checks if `city` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_lte",
              "description": "Checks if `city` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_gt",
              "description": "Checks if `city` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_gte",
              "description": "Checks if `city` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_contains",
              "description": "Checks if `city` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_not_contains",
              "description": "Checks if `city` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_starts_with",
              "description": "Checks if `city` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "city_not_starts_with",
              "description": "Checks if `city` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "city_ends_with",
              "description": "Checks if `city` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_not_ends_with",
              "description": "Checks if `city` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_like",
              "description": "Matches `city` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `city`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "city_not_like",
              "description": "Checks if `city` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "zipCode",
              "description": "Checks if `zipCode` equals a specified string, case-sensitively.\n\nIf an index exists on `zipCode`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not",
              "description": "Checks if `zipCode` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_in",
              "description": "Checks if `zipCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not_in",
              "description": "Checks if `zipCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_lt",
              "description": "Checks if `zipCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_lte",
              "description": "Checks if `zipCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_gt",
              "description": "Checks if `zipCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_gte",
              "description": "Checks if `zipCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_contains",
              "description": "Checks if `zipCode` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not_contains",
              "description": "Checks if `zipCode` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_starts_with",
              "description": "Checks if `zipCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not_starts_with",
              "description": "Checks if `zipCode` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_ends_with",
              "description": "Checks if `zipCode` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not_ends_with",
              "description": "Checks if `zipCode` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "zipCode_like",
              "description": "Matches `zipCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `zipCode`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "zipCode_not_like",
              "description": "Checks if `zipCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `country` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "DangerousGoodsInfoFilter",
          "description": "Filter type for DangerousGoodsInfo.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": "Checks if `unNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `unNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not",
              "description": "Checks if `unNumber` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_in",
              "description": "Checks if `unNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_in",
              "description": "Checks if `unNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_lt",
              "description": "Checks if `unNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_lte",
              "description": "Checks if `unNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_gt",
              "description": "Checks if `unNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_gte",
              "description": "Checks if `unNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_contains",
              "description": "Checks if `unNumber` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_contains",
              "description": "Checks if `unNumber` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_starts_with",
              "description": "Checks if `unNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_starts_with",
              "description": "Checks if `unNumber` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_ends_with",
              "description": "Checks if `unNumber` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_ends_with",
              "description": "Checks if `unNumber` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_like",
              "description": "Matches `unNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `unNumber`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_like",
              "description": "Checks if `unNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "flashpoint",
              "description": "Checks if `flashpoint` equals a specified string, case-sensitively.\n\nIf an index exists on `flashpoint`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not",
              "description": "Checks if `flashpoint` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_in",
              "description": "Checks if `flashpoint` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not_in",
              "description": "Checks if `flashpoint` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_lt",
              "description": "Checks if `flashpoint` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_lte",
              "description": "Checks if `flashpoint` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_gt",
              "description": "Checks if `flashpoint` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_gte",
              "description": "Checks if `flashpoint` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_contains",
              "description": "Checks if `flashpoint` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not_contains",
              "description": "Checks if `flashpoint` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_starts_with",
              "description": "Checks if `flashpoint` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not_starts_with",
              "description": "Checks if `flashpoint` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_ends_with",
              "description": "Checks if `flashpoint` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not_ends_with",
              "description": "Checks if `flashpoint` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_like",
              "description": "Matches `flashpoint` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `flashpoint`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "flashpoint_not_like",
              "description": "Checks if `flashpoint` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "notices_some",
              "description": "Makes sure at least one of the items in \"notices\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `notices` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "notices_every",
              "description": "Makes sure all items in `notices` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "notices_none",
              "description": "Makes sure none of the items in `notices` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `notices` has no items.",
              "deprecationReason": null
            },
            {
              "name": "notices_empty",
              "description": "Checks if `notices` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "details",
              "description": "Allows to filter on the fields of `details`.\n\nNote that `details` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "DangerousGoodsDetailsFilter",
          "description": "Filter type for DangerousGoodsDetails.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": "Checks if `expiryDate` equals a specified value.\n\nIf an index exists on `expiryDate`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_not",
              "description": "Checks if `expiryDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_in",
              "description": "Checks if `expiryDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_not_in",
              "description": "Checks if `expiryDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_lt",
              "description": "Checks if `expiryDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_lte",
              "description": "Checks if `expiryDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_gt",
              "description": "Checks if `expiryDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "expiryDate_gte",
              "description": "Checks if `expiryDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": "Checks if `comment` equals a specified string, case-sensitively.\n\nIf an index exists on `comment`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "comment_not",
              "description": "Checks if `comment` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "comment_in",
              "description": "Checks if `comment` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "comment_not_in",
              "description": "Checks if `comment` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "comment_lt",
              "description": "Checks if `comment` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "comment_lte",
              "description": "Checks if `comment` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "comment_gt",
              "description": "Checks if `comment` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "comment_gte",
              "description": "Checks if `comment` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "comment_contains",
              "description": "Checks if `comment` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "comment_not_contains",
              "description": "Checks if `comment` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "comment_starts_with",
              "description": "Checks if `comment` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "comment_not_starts_with",
              "description": "Checks if `comment` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "comment_ends_with",
              "description": "Checks if `comment` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "comment_not_ends_with",
              "description": "Checks if `comment` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "comment_like",
              "description": "Matches `comment` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `comment`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "comment_not_like",
              "description": "Checks if `comment` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "ForwarderFilter",
          "description": "Filter type for Forwarder.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified string, case-sensitively.\n\nIf an index exists on `name`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_in",
              "description": "Checks if `name` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_not_in",
              "description": "Checks if `name` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_lt",
              "description": "Checks if `name` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_lte",
              "description": "Checks if `name` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gt",
              "description": "Checks if `name` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gte",
              "description": "Checks if `name` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_contains",
              "description": "Checks if `name` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not_contains",
              "description": "Checks if `name` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_starts_with",
              "description": "Checks if `name` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "name_not_starts_with",
              "description": "Checks if `name` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "name_ends_with",
              "description": "Checks if `name` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not_ends_with",
              "description": "Checks if `name` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_like",
              "description": "Matches `name` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `name`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "name_not_like",
              "description": "Checks if `name` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "deliveries_some",
              "description": "Makes sure at least one of the items in \"deliveries\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_every",
              "description": "Makes sure all items in `deliveries` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_none",
              "description": "Makes sure none of the items in `deliveries` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has no items.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_empty",
              "description": "Checks if `deliveries` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "Foobarit",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "OffsetDateTime",
          "description": "The `OffsetDateTime` scalar type represents a point in time with a timezone offset, in a format specified by ISO 8601, such as `2007-12-03T10:15:30+01:00` or `2007-12-03T10:15:30.123Z`.\n\nOnly use this type for timestamps that are inherently tied to a location and the timezone offset should be calculated eagerly. To only store a point in time, use `DateTime`.\n\nThe *second* part is added if not specified, e.g. `2007-12-03T12:34Z` is converted to `2007-12-03T12:34:00Z`. Offset specifier `Z` is accepted but will be converted to `+00:00`. Leap seconds are not supported.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "LocalTime",
          "description": "The `LocalTime` scalar type represents a time without time zone in a format specified by ISO 8601, such as 10:15:30 or 17:05:03.521.\n\nThe valid range is between 00:00:00 and 23:59:59.999999999. 24:00 is not allowed to avoid bugs in clients that treat 24:00 as 0:00.\n\nThe seconds part is cut off if it is zero, e.g. 12:34:00 is converted to 12:34. Second fraction digits are cut off at the nearest three-digit group, e.g. 00:00:00.1234 is converted to 00:00:00.123400.\n\nLeap seconds can not be specified.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "ColorDataFilter",
          "description": "Filter type for ColorData.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "packageColor",
              "description": "Checks if `packageColor` equals a specified string, case-sensitively.\n\nIf an index exists on `packageColor`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not",
              "description": "Checks if `packageColor` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_in",
              "description": "Checks if `packageColor` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_in",
              "description": "Checks if `packageColor` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_lt",
              "description": "Checks if `packageColor` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_lte",
              "description": "Checks if `packageColor` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_gt",
              "description": "Checks if `packageColor` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_gte",
              "description": "Checks if `packageColor` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_contains",
              "description": "Checks if `packageColor` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_contains",
              "description": "Checks if `packageColor` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_starts_with",
              "description": "Checks if `packageColor` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_starts_with",
              "description": "Checks if `packageColor` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_ends_with",
              "description": "Checks if `packageColor` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_ends_with",
              "description": "Checks if `packageColor` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_like",
              "description": "Matches `packageColor` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `packageColor`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_like",
              "description": "Checks if `packageColor` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "RecursionFilter",
          "description": "Filter type for Recursion.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "recursion",
              "description": "Checks if `recursion` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified string, case-sensitively.\n\nIf an index exists on `name`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_in",
              "description": "Checks if `name` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_not_in",
              "description": "Checks if `name` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_lt",
              "description": "Checks if `name` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_lte",
              "description": "Checks if `name` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gt",
              "description": "Checks if `name` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gte",
              "description": "Checks if `name` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_contains",
              "description": "Checks if `name` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not_contains",
              "description": "Checks if `name` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_starts_with",
              "description": "Checks if `name` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "name_not_starts_with",
              "description": "Checks if `name` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "name_ends_with",
              "description": "Checks if `name` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not_ends_with",
              "description": "Checks if `name` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_like",
              "description": "Matches `name` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `name`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "name_not_like",
              "description": "Checks if `name` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "EnumWithDeprecation",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryItemOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "HandlingUnitOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Forwarder",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deliveries",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_deliveriesMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DeliveryOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "JSON",
          "description": "The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "ColorData",
          "description": null,
          "fields": [
            {
              "name": "packageColor",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Recursion",
          "description": null,
          "fields": [
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DeliveryFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber",
              "description": "Checks if `deliveryNumber` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not",
              "description": "Checks if `deliveryNumber` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_lt",
              "description": "Checks if `deliveryNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_lte",
              "description": "Checks if `deliveryNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_gt",
              "description": "Checks if `deliveryNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_gte",
              "description": "Checks if `deliveryNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_in",
              "description": "Checks if `deliveryNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_in",
              "description": "Checks if `deliveryNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_starts_with",
              "description": "Checks if `deliveryNumber` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber_not_starts_with",
              "description": "Checks if `deliveryNumber` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_equal",
              "description": "Checks if `serialNumbers` equals a specified string, case-insensitively.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_not",
              "description": "Checks if `serialNumbers` does not equal a specified string, case-insensitively.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_lt",
              "description": "Checks if `serialNumbers` is less than a specified value.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_lte",
              "description": "Checks if `serialNumbers` is less or equal a specified value.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_gt",
              "description": "Checks if `serialNumbers` is greater than a specified value.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_gte",
              "description": "Checks if `serialNumbers` is greater or equal a specified value.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_in",
              "description": "Checks if `serialNumbers` is equal to one of the specified values.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_not_in",
              "description": "Checks if `serialNumbers` is not equal to one of the specified values.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_starts_with",
              "description": "Checks if `serialNumbers` starts with a specified string, case-insensitively.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_aggregation_not_starts_with",
              "description": "Checks if `serialNumbers` does not start with a specified string, case-insensitively.\n\nThe list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "serialNumbers_empty",
              "description": "Checks if `serialNumbers` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "Checks if `consignee` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "itemsAggregation",
              "description": "Checks if `items` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "items_empty",
              "description": "Checks if `items` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Checks if `destinationCountryISOCode` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not",
              "description": "Checks if `destinationCountryISOCode` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_lt",
              "description": "Checks if `destinationCountryISOCode` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_lte",
              "description": "Checks if `destinationCountryISOCode` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_gt",
              "description": "Checks if `destinationCountryISOCode` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_gte",
              "description": "Checks if `destinationCountryISOCode` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_in",
              "description": "Checks if `destinationCountryISOCode` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_in",
              "description": "Checks if `destinationCountryISOCode` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_starts_with",
              "description": "Checks if `destinationCountryISOCode` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "destinationCountryISOCode_not_starts_with",
              "description": "Checks if `destinationCountryISOCode` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": "Checks if `completionDate` equals a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_not",
              "description": "Checks if `completionDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "completionDate_in",
              "description": "Checks if `completionDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_not_in",
              "description": "Checks if `completionDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_lt",
              "description": "Checks if `completionDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_lte",
              "description": "Checks if `completionDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_gt",
              "description": "Checks if `completionDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "completionDate_gte",
              "description": "Checks if `completionDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": "Checks if `dispatchDate` equals a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_not",
              "description": "Checks if `dispatchDate` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_in",
              "description": "Checks if `dispatchDate` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_not_in",
              "description": "Checks if `dispatchDate` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_lt",
              "description": "Checks if `dispatchDate` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_lte",
              "description": "Checks if `dispatchDate` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_gt",
              "description": "Checks if `dispatchDate` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dispatchDate_gte",
              "description": "Checks if `dispatchDate` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "description_contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if `description` contains at least one of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if `description` contains none of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if `description` contains all of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if at least one word is not contained in `description`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if `description` contains any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if `description` does not contain any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_contains_all_prefixes",
              "description": "Tokenizes the provided string into prefixes, and checks if all prefixes appears in `description`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains_all_prefixes",
              "description": "Tokenizes the provided prefixes into words, and checks if there is at least one prefix that does not appear in `description`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is included in `description`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "description_not_contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is not included in `description`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": "Allows to filter on the fields of `colorData`.\n\nNote that `colorData` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": "Checks if `enumFlexSearch` equals a specified value.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_not",
              "description": "Checks if `enumFlexSearch` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_in",
              "description": "Checks if `enumFlexSearch` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch_not_in",
              "description": "Checks if `enumFlexSearch` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": "Checks if `aText` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_not",
              "description": "Checks if `aText` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_lt",
              "description": "Checks if `aText` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_lte",
              "description": "Checks if `aText` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_gt",
              "description": "Checks if `aText` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_gte",
              "description": "Checks if `aText` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aText_in",
              "description": "Checks if `aText` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_in",
              "description": "Checks if `aText` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aText_starts_with",
              "description": "Checks if `aText` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "aText_not_starts_with",
              "description": "Checks if `aText` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": "Checks if `aNumber` equals a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_not",
              "description": "Checks if `aNumber` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "aNumber_in",
              "description": "Checks if `aNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_not_in",
              "description": "Checks if `aNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_lt",
              "description": "Checks if `aNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_lte",
              "description": "Checks if `aNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_gt",
              "description": "Checks if `aNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "aNumber_gte",
              "description": "Checks if `aNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": "Checks if `recursion` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": "Checks if `sometimesNull` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not",
              "description": "Checks if `sometimesNull` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_lt",
              "description": "Checks if `sometimesNull` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_lte",
              "description": "Checks if `sometimesNull` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_gt",
              "description": "Checks if `sometimesNull` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_gte",
              "description": "Checks if `sometimesNull` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_in",
              "description": "Checks if `sometimesNull` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_in",
              "description": "Checks if `sometimesNull` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_starts_with",
              "description": "Checks if `sometimesNull` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "sometimesNull_not_starts_with",
              "description": "Checks if `sometimesNull` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": "Checks if `caseInsensitiveField` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not",
              "description": "Checks if `caseInsensitiveField` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_lt",
              "description": "Checks if `caseInsensitiveField` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_lte",
              "description": "Checks if `caseInsensitiveField` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_gt",
              "description": "Checks if `caseInsensitiveField` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_gte",
              "description": "Checks if `caseInsensitiveField` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_in",
              "description": "Checks if `caseInsensitiveField` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_in",
              "description": "Checks if `caseInsensitiveField` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_starts_with",
              "description": "Checks if `caseInsensitiveField` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField_not_starts_with",
              "description": "Checks if `caseInsensitiveField` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "AddressFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "city",
              "description": "Checks if `city` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_not",
              "description": "Checks if `city` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_lt",
              "description": "Checks if `city` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_lte",
              "description": "Checks if `city` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_gt",
              "description": "Checks if `city` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_gte",
              "description": "Checks if `city` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "city_in",
              "description": "Checks if `city` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "city_not_in",
              "description": "Checks if `city` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "city_starts_with",
              "description": "Checks if `city` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "city_not_starts_with",
              "description": "Checks if `city` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "DeliveryItemAggregationFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if `itemNumber` contains at least one of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if `itemNumber` contains none of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if `itemNumber` contains all of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if at least one word is not contained in `itemNumber`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if `itemNumber` contains any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if `itemNumber` does not contain any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains_all_prefixes",
              "description": "Tokenizes the provided string into prefixes, and checks if all prefixes appears in `itemNumber`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains_all_prefixes",
              "description": "Tokenizes the provided prefixes into words, and checks if there is at least one prefix that does not appear in `itemNumber`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is included in `itemNumber`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "itemNumber_not_contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is not included in `itemNumber`.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "Checks if `quantity` equals a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_not",
              "description": "Checks if `quantity` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "quantity_in",
              "description": "Checks if `quantity` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "quantity_not_in",
              "description": "Checks if `quantity` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "quantity_lt",
              "description": "Checks if `quantity` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_lte",
              "description": "Checks if `quantity` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_gt",
              "description": "Checks if `quantity` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "quantity_gte",
              "description": "Checks if `quantity` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "Allows to filter on the fields of `dgInfo`.\n\nNote that `dgInfo` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect.",
              "deprecationReason": null
            },
            {
              "name": "description_localized",
              "description": "Makes sure at least one of the entries in \"description\" has a value that matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has at least one item.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "DangerousGoodsInfoAggregationFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": "Checks if `unNumber` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not",
              "description": "Checks if `unNumber` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_lt",
              "description": "Checks if `unNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_lte",
              "description": "Checks if `unNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_gt",
              "description": "Checks if `unNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_gte",
              "description": "Checks if `unNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_in",
              "description": "Checks if `unNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_in",
              "description": "Checks if `unNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_starts_with",
              "description": "Checks if `unNumber` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "unNumber_not_starts_with",
              "description": "Checks if `unNumber` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "I18nStringLocalizedRegularAndFulltextFilter",
          "description": "Allows to on a specific localization of an `I18nString`\n\nThe language should be provided in the special `language` field. All other fields are *and*-combined. There are no fallback rules for string localization; if there is no localization for the given language, the filter acts as if the field was `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "language",
              "description": "Sets the language to be used for the filters in this object",
              "deprecationReason": null
            },
            {
              "name": "equal",
              "description": "Checks if the value equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "not",
              "description": "Checks if the value does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "lt",
              "description": "Checks if the value is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "lte",
              "description": "Checks if the value is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "gt",
              "description": "Checks if the value is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "gte",
              "description": "Checks if the value is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "in",
              "description": "Checks if the value is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "not_in",
              "description": "Checks if the value is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "starts_with",
              "description": "Checks if the value starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "not_starts_with",
              "description": "Checks if the value does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if the value contains at least one of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "not_contains_any_word",
              "description": "Tokenizes the provided string into words, and checks if the value contains none of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if the value contains all of them.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "not_contains_all_words",
              "description": "Tokenizes the provided string into words, and checks if at least one word is not contained in the value.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if the value contains any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "not_contains_any_prefix",
              "description": "Tokenizes the provided string into prefixes, and checks if the value does not contain any word that starts with one of these prefixes.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "contains_all_prefixes",
              "description": "Tokenizes the provided string into prefixes, and checks if all prefixes appears in the value.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "not_contains_all_prefixes",
              "description": "Tokenizes the provided prefixes into words, and checks if there is at least one prefix that does not appear in the value.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is included in the value.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            },
            {
              "name": "not_contains_phrase",
              "description": "Tokenizes the provided string into words, and checks if that exact phrase (those words in excactly this order) is not included in the value.\n Stemming (reduction of words on their base form) is applied.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "ColorDataFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "packageColor",
              "description": "Checks if `packageColor` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not",
              "description": "Checks if `packageColor` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_lt",
              "description": "Checks if `packageColor` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_lte",
              "description": "Checks if `packageColor` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_gt",
              "description": "Checks if `packageColor` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_gte",
              "description": "Checks if `packageColor` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_in",
              "description": "Checks if `packageColor` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_in",
              "description": "Checks if `packageColor` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_starts_with",
              "description": "Checks if `packageColor` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "packageColor_not_starts_with",
              "description": "Checks if `packageColor` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "RecursionFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "recursion",
              "description": "Checks if `recursion` is not null, and allows to filter based on its fields.",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_lt",
              "description": "Checks if `name` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_lte",
              "description": "Checks if `name` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gt",
              "description": "Checks if `name` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_gte",
              "description": "Checks if `name` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "name_in",
              "description": "Checks if `name` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_not_in",
              "description": "Checks if `name` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_starts_with",
              "description": "Checks if `name` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "name_not_starts_with",
              "description": "Checks if `name` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "ForwarderOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "OnlyRelations",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "deliveries",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_deliveriesMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "OnlyRelationsFilter",
          "description": "Filter type for OnlyRelations.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "deliveries_some",
              "description": "Makes sure at least one of the items in \"deliveries\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has at least one item.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_every",
              "description": "Makes sure all items in `deliveries` match a certain filter.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_none",
              "description": "Makes sure none of the items in `deliveries` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has no items.",
              "deprecationReason": null
            },
            {
              "name": "deliveries_empty",
              "description": "Checks if `deliveries` is an empty list (true) or a non-empty list (false).",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "OnlyRelationsOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "HandlingUnitFlexSearchFilter",
          "description": "An aggregation contains all values of a list. Each check in this type is true if it matches any of the values in the list.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "huNumber",
              "description": "Checks if `huNumber` equals a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not",
              "description": "Checks if `huNumber` does not equal a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_lt",
              "description": "Checks if `huNumber` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_lte",
              "description": "Checks if `huNumber` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_gt",
              "description": "Checks if `huNumber` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_gte",
              "description": "Checks if `huNumber` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_in",
              "description": "Checks if `huNumber` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_in",
              "description": "Checks if `huNumber` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_starts_with",
              "description": "Checks if `huNumber` starts with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "huNumber_not_starts_with",
              "description": "Checks if `huNumber` does not start with a specified string, case-insensitively.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "NumberRange",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "NumberRangeName",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Int53",
          "description": "The Int53 scalar type represents non-fractional signed whole numeric values. Int53 can represent values between -9007199254740991 and 9007199254740991.\n\nValues of this type are serialized as numbers in GraphQL and JSON representations. The numeric range of this type corresponds to the safe integer range of an IEEE 754 double precision binary floating-point value.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "NumberRangeFilter",
          "description": "Filter type for NumberRange.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified value.\n\nIf an index exists on `name`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "name_in",
              "description": "Checks if `name` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "name_not_in",
              "description": "Checks if `name` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "Checks if `number` equals a specified value.\n\nIf an index exists on `number`, it can be used.",
              "deprecationReason": null
            },
            {
              "name": "number_not",
              "description": "Checks if `number` does not equal a specified value",
              "deprecationReason": null
            },
            {
              "name": "number_in",
              "description": "Checks if `number` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "number_not_in",
              "description": "Checks if `number` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "number_lt",
              "description": "Checks if `number` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "number_lte",
              "description": "Checks if `number` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "number_gt",
              "description": "Checks if `number` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "number_gte",
              "description": "Checks if `number` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "NumberRangeOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "SecretKey",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "An identifier that is updated automatically on each update of this root entity (but not on relation changes)",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "SecretKeyFilter",
          "description": "Filter type for SecretKey.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_in",
              "description": "Checks if `id` is equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_not_in",
              "description": "Checks if `id` is not equal to one of the specified values.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lt",
              "description": "Checks if `id` is less than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_lte",
              "description": "Checks if `id` is less or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gt",
              "description": "Checks if `id` is greater than a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "id_gte",
              "description": "Checks if `id` is greater or equal a specified value.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type",
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_in",
              "description": "Checks if `createdAt` is equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_not_in",
              "description": "Checks if `createdAt` is not equal to one of the specified values.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lt",
              "description": "Checks if `createdAt` is less than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_lte",
              "description": "Checks if `createdAt` is less or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gt",
              "description": "Checks if `createdAt` is greater than a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "createdAt_gte",
              "description": "Checks if `createdAt` is greater or equal a specified value.\n\nThe instant this object has been created",
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_in",
              "description": "Checks if `updatedAt` is equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_not_in",
              "description": "Checks if `updatedAt` is not equal to one of the specified values.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lt",
              "description": "Checks if `updatedAt` is less than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_lte",
              "description": "Checks if `updatedAt` is less or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gt",
              "description": "Checks if `updatedAt` is greater than a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "updatedAt_gte",
              "description": "Checks if `updatedAt` is greater or equal a specified value.\n\nThe instant this object has been updated the last time (not including relation updates)",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": "Checks if `key` equals a specified string, case-sensitively.\n\nIf an index exists on `key`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "key_not",
              "description": "Checks if `key` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_in",
              "description": "Checks if `key` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "key_not_in",
              "description": "Checks if `key` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "key_lt",
              "description": "Checks if `key` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_lte",
              "description": "Checks if `key` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_gt",
              "description": "Checks if `key` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_gte",
              "description": "Checks if `key` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "key_contains",
              "description": "Checks if `key` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_not_contains",
              "description": "Checks if `key` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_starts_with",
              "description": "Checks if `key` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "key_not_starts_with",
              "description": "Checks if `key` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "key_ends_with",
              "description": "Checks if `key` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_not_ends_with",
              "description": "Checks if `key` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "key_like",
              "description": "Matches `key` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `key`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "key_not_like",
              "description": "Checks if `key` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "Checks if `value` equals a specified string, case-sensitively.\n\nIf an index exists on `value`, it can be used.\n\nSee also `like` for a case-insensitive filter.",
              "deprecationReason": null
            },
            {
              "name": "value_not",
              "description": "Checks if `value` does not equal a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_in",
              "description": "Checks if `value` is equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "value_not_in",
              "description": "Checks if `value` is not equal to one of the specified values.",
              "deprecationReason": null
            },
            {
              "name": "value_lt",
              "description": "Checks if `value` is less than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_lte",
              "description": "Checks if `value` is less or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_gt",
              "description": "Checks if `value` is greater than a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_gte",
              "description": "Checks if `value` is greater or equal a specified value.",
              "deprecationReason": null
            },
            {
              "name": "value_contains",
              "description": "Checks if `value` contains a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_not_contains",
              "description": "Checks if `value` does not contain a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_starts_with",
              "description": "Checks if `value` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "value_not_starts_with",
              "description": "Checks if `value` does not start with a specified string, case-sensitively.\n\nNever uses an index. Consider using `not_like` (with the `%` placeholder) for a case-insensitive filter that can use an index.",
              "deprecationReason": null
            },
            {
              "name": "value_ends_with",
              "description": "Checks if `value` ends with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_not_ends_with",
              "description": "Checks if `value` does not end with a specified string, case-sensitively.",
              "deprecationReason": null
            },
            {
              "name": "value_like",
              "description": "Matches `value` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `value`, it can be used for the literal prefix (the part until the first placeholder).",
              "deprecationReason": null
            },
            {
              "name": "value_not_like",
              "description": "Checks if `value` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)",
              "deprecationReason": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects.",
              "deprecationReason": null
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "SecretKeyOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "CreateBillingEntityInput",
          "description": "The create type for the root entity type `BillingEntity`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isExported",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "exportedAt",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateBillingEntityInput",
          "description": "The update type for the root entity type `BillingEntity`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `BillingEntity` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isExported",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "exportedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"BillingEntity._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllBillingEntitiesInput",
          "description": "The update type for the root entity type `BillingEntity`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isConfirmedForExport",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isExported",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "confirmedForExportAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "exportedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"BillingEntity._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateCountryInput",
          "description": "The create type for the root entity type `Country`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "isoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "descriptionI18nString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalInvestment",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "TranslationInput",
          "description": "The create/update type for the value object type `Translation`.\n\nIf this is used in an update mutation, missing fields are set to `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "languageIsoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "translation",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateCountryInput",
          "description": "The update type for the root entity type `Country`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Country` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "isoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "descriptionI18nString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalInvestment",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Country._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllCountriesInput",
          "description": "The update type for the root entity type `Country`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "isoCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "descriptionI18nString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalInvestment",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "someKey",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Country._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateDeliveryInput",
          "description": "The create type for the root entity type `Delivery`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveryNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee",
              "deprecationReason": null
            },
            {
              "name": "contentInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "handlingUnits",
              "description": "Adds `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nIf one of the `HandlingUnits` is already related to a different `Delivery`, these relations are removed first.\n\nThe handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "createHandlingUnits",
              "description": "Creates new `HandlingUnits` and adds `handlingUnits` relations between them and the new `Delivery`.\n\nThe handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": "Use \"destinationCountryISOCode\" instead."
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalValue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "forwarder",
              "description": "Sets the `forwarder` relation to an existing `Forwarder` by its id.",
              "deprecationReason": null
            },
            {
              "name": "createForwarder",
              "description": "Creates a new `Forwarder` and adds a `forwarder` relation between it and the new `Delivery`.",
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dynamicData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecatedField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "AddressInput",
          "description": "The create/update type for the value object type `Address`.\n\nIf this is used in an update mutation, missing fields are set to `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "street",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "city",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "zipCode",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "country",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateDangerousGoodsInfoInput",
          "description": "The create type for the entity extension type `DangerousGoodsInfo`.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "flashpoint",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "notices",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "details",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateDangerousGoodsDetailsInput",
          "description": "The create type for the entity extension type `DangerousGoodsDetails`.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateDeliveryItemInput",
          "description": "The create type for the child entity type `DeliveryItem`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "itemNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "weightInKg",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "handlingUnit",
              "description": "Specify the `id` of the `HandlingUnit` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateHandlingUnitInput",
          "description": "The create type for the root entity type `HandlingUnit`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "huNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "delivery",
              "description": "Sets the `delivery` relation to an existing `Delivery` by its id.",
              "deprecationReason": null
            },
            {
              "name": "createDelivery",
              "description": "Creates a new `Delivery` and adds a `delivery` relation between it and the new `HandlingUnit`.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateForwarderInput",
          "description": "The create type for the root entity type `Forwarder`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.\n\nIf one of the `Deliveries` is already related to a different `Forwarder`, these relations are removed first.",
              "deprecationReason": null
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and the new `Forwarder`.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateColorDataInput",
          "description": "The create type for the entity extension type `ColorData`.",
          "fields": null,
          "inputFields": [
            {
              "name": "packageColor",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "RecursionInput",
          "description": "The create/update type for the value object type `Recursion`.\n\nIf this is used in an update mutation, missing fields are set to `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateDeliveryInput",
          "description": "The update type for the root entity type `Delivery`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Delivery` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "deliveryNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee",
              "deprecationReason": null
            },
            {
              "name": "contentInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "Deletes all `DeliveryItems` objects in list of `items` and replaces it with the specified objects.\n\nCannot be combined with the add/update/delete fields for the same child entity list.",
              "deprecationReason": null
            },
            {
              "name": "addItems",
              "description": "Adds new `DeliveryItems` to the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "updateItems",
              "description": "Updates `DeliveryItems` in the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "removeItems",
              "description": "Deletes `DeliveryItems` by ids in the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "addHandlingUnits",
              "description": "Adds `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nIf one of the `HandlingUnits` is already related to a different `Delivery`, these relations are removed first.\n\nThe handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "removeHandlingUnits",
              "description": "Removes `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nThe handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "createHandlingUnits",
              "description": "Creates new `HandlingUnits` and adds `handlingUnits` relations between them and this `Delivery`.\n\nThe handling units the items of this delivery are packaged in",
              "deprecationReason": null
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": "Use \"destinationCountryISOCode\" instead."
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalValue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "forwarder",
              "description": "Sets the `forwarder` relation to an existing `Forwarder` by its id.\n\nIf this `Delivery` already has a `forwarder` relation, this relation is removed first.",
              "deprecationReason": null
            },
            {
              "name": "createForwarder",
              "description": "Creates a new `Forwarder` and sets the `forwarder` relation to the created object.\n\nIf this `Delivery` already has a `forwarder` relation, this relation is removed first.",
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dynamicData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecatedField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Delivery._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateDangerousGoodsInfoInput",
          "description": "The update type for the entity extension type `DangerousGoodsInfo`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "flashpoint",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "notices",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "details",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateDangerousGoodsDetailsInput",
          "description": "The update type for the entity extension type `DangerousGoodsDetails`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateDeliveryItemInput",
          "description": "The update type for the child entity type `DeliveryItem`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `DeliveryItem` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "itemNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "weightInKg",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "handlingUnit",
              "description": "Specify the `id` of the `HandlingUnit` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateColorDataInput",
          "description": "The update type for the entity extension type `ColorData`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "packageColor",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllDeliveriesInput",
          "description": "The update type for the root entity type `Delivery`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveryNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery",
              "deprecationReason": null
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee",
              "deprecationReason": null
            },
            {
              "name": "contentInfo",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            },
            {
              "name": "items",
              "description": "Deletes all `DeliveryItems` objects in list of `items` and replaces it with the specified objects.\n\nCannot be combined with the add/update/delete fields for the same child entity list.",
              "deprecationReason": null
            },
            {
              "name": "addItems",
              "description": "Adds new `DeliveryItems` to the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "updateItems",
              "description": "Updates `DeliveryItems` in the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "removeItems",
              "description": "Deletes `DeliveryItems` by ids in the list of `items`",
              "deprecationReason": null
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": "Use \"destinationCountryISOCode\" instead."
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "completionDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced",
              "deprecationReason": null
            },
            {
              "name": "shippedAt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "totalValue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "destination",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueString2",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueInt",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueTrue",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFalse",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueFloat",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValueEnum",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dispatchDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupDate",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeStart",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "dynamicData",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "colorData",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value.",
              "deprecationReason": null
            },
            {
              "name": "enumFlexSearch",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aText",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "aNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "recursion",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecatedField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumWithDeprecation",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "sometimesNull",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "caseInsensitiveField",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Delivery._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateForwarderInput",
          "description": "The update type for the root entity type `Forwarder`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Forwarder` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "addDeliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.\n\nIf one of the `Deliveries` is already related to a different `Forwarder`, these relations are removed first.",
              "deprecationReason": null
            },
            {
              "name": "removeDeliveries",
              "description": "Removes `deliveries` relations to existing `Deliveries` by their ids.",
              "deprecationReason": null
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and this `Forwarder`.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Forwarder._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllForwardersInput",
          "description": "The update type for the root entity type `Forwarder`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"Forwarder._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateOnlyRelationsInput",
          "description": "The create type for the root entity type `OnlyRelations`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.",
              "deprecationReason": null
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and the new `OnlyRelations`.",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateOnlyRelationsInput",
          "description": "The update type for the root entity type `OnlyRelations`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `OnlyRelations` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "addDeliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.",
              "deprecationReason": null
            },
            {
              "name": "removeDeliveries",
              "description": "Removes `deliveries` relations to existing `Deliveries` by their ids.",
              "deprecationReason": null
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and this `OnlyRelations`.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"OnlyRelations._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateHandlingUnitInput",
          "description": "The update type for the root entity type `HandlingUnit`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `HandlingUnit` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "huNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "delivery",
              "description": "Sets the `delivery` relation to an existing `Delivery` by its id.\n\nIf this `HandlingUnit` already has a `delivery` relation, this relation is removed first.",
              "deprecationReason": null
            },
            {
              "name": "createDelivery",
              "description": "Creates a new `Delivery` and sets the `delivery` relation to the created object.\n\nIf this `HandlingUnit` already has a `delivery` relation, this relation is removed first.",
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"HandlingUnit._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllHandlingUnitsInput",
          "description": "The update type for the root entity type `HandlingUnit`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "huNumber",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"HandlingUnit._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateNumberRangeInput",
          "description": "The create type for the root entity type `NumberRange`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateNumberRangeInput",
          "description": "The update type for the root entity type `NumberRange`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `NumberRange` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "addTo_number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "multiplyWith_number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"NumberRange._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllNumberRangesInput",
          "description": "The update type for the root entity type `NumberRange`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "addTo_number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "multiplyWith_number",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"NumberRange._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "CreateSecretKeyInput",
          "description": "The create type for the root entity type `SecretKey`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": null,
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateSecretKeyInput",
          "description": "The update type for the root entity type `SecretKey`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `SecretKey` to be updated (does not change the `id`).",
              "deprecationReason": null
            },
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"SecretKey._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "UpdateAllSecretKeysInput",
          "description": "The update type for the root entity type `SecretKey`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_revision",
              "description": "Set this field to the value of \"SecretKey._revision\" to abort the transaction if this object has been modified in the meantime",
              "deprecationReason": null
            }
          ]
        },
        {
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "specifiedByURL",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "isRepeatable",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Query",
          "description": "The Query type for the root namespace",
          "fields": [
            {
              "name": "BillingEntity",
              "description": "Finds a BillingEntity by id",
              "deprecationReason": null
            },
            {
              "name": "allBillingEntities",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allBillingEntitiesMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "Country",
              "description": "Finds a Country by id or isoCode.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "allCountries",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allCountriesMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "flexSearchCountries",
              "description": "Queries for Countries using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "_flexSearchCountriesMeta",
              "description": "Queries for Countries using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "Delivery",
              "description": "Finds a Delivery by id or deliveryNumber.\n\nYou should pass a non-null value to exactly one of the arguments.\n\nA delivery",
              "deprecationReason": null
            },
            {
              "name": "allDeliveries",
              "description": "A delivery",
              "deprecationReason": null
            },
            {
              "name": "_allDeliveriesMeta",
              "description": "A delivery",
              "deprecationReason": null
            },
            {
              "name": "flexSearchDeliveries",
              "description": "Queries for Deliveries using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "_flexSearchDeliveriesMeta",
              "description": "Queries for Deliveries using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "Forwarder",
              "description": "Finds a Forwarder by id or name.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "allForwarders",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allForwardersMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "OnlyRelations",
              "description": "Finds a OnlyRelations by id",
              "deprecationReason": null
            },
            {
              "name": "allOnlyRelations",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allOnlyRelationsMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "HandlingUnit",
              "description": "Finds a HandlingUnit by id or id.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "allHandlingUnits",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allHandlingUnitsMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "flexSearchHandlingUnits",
              "description": "Queries for HandlingUnits using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "_flexSearchHandlingUnitsMeta",
              "description": "Queries for HandlingUnits using FlexSearch.",
              "deprecationReason": null
            },
            {
              "name": "NumberRange",
              "description": "Finds a NumberRange by id or name.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "allNumberRanges",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allNumberRangesMeta",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "SecretKey",
              "description": "Finds a SecretKey by id or key.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "allSecretKeys",
              "description": null,
              "deprecationReason": null
            },
            {
              "name": "_allSecretKeysMeta",
              "description": null,
              "deprecationReason": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "Mutation",
          "description": "The Mutation type for the root namespace\n\nFields are executed serially in the order they occur in the selection set (the result of the first field does not see the changes made by the second field). All mutations are executed atomically - if any of them fail, the complete operation is rolled back.",
          "fields": [
            {
              "name": "createBillingEntity",
              "description": "Creates a new BillingEntity",
              "deprecationReason": null
            },
            {
              "name": "createBillingEntities",
              "description": "Creates multiple new BillingEntities",
              "deprecationReason": null
            },
            {
              "name": "updateBillingEntity",
              "description": "Updates an existing BillingEntity",
              "deprecationReason": null
            },
            {
              "name": "updateBillingEntities",
              "description": "Updates multiple existing BillingEntities (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllBillingEntities",
              "description": "Updates BillingEntities that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteBillingEntity",
              "description": "Deletes a BillingEntity by id",
              "deprecationReason": null
            },
            {
              "name": "deleteBillingEntities",
              "description": "Deletes multiple BillingEntities by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllBillingEntities",
              "description": "Deletes BillingEntities that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createCountry",
              "description": "Creates a new Country",
              "deprecationReason": null
            },
            {
              "name": "createCountries",
              "description": "Creates multiple new Countries",
              "deprecationReason": null
            },
            {
              "name": "updateCountry",
              "description": "Updates an existing Country",
              "deprecationReason": null
            },
            {
              "name": "updateCountries",
              "description": "Updates multiple existing Countries (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllCountries",
              "description": "Updates Countries that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteCountry",
              "description": "Deletes a Country by id or isoCode.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteCountries",
              "description": "Deletes multiple Countries by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllCountries",
              "description": "Deletes Countries that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createDelivery",
              "description": "Creates a new Delivery",
              "deprecationReason": null
            },
            {
              "name": "createDeliveries",
              "description": "Creates multiple new Deliveries",
              "deprecationReason": null
            },
            {
              "name": "updateDelivery",
              "description": "Updates an existing Delivery",
              "deprecationReason": null
            },
            {
              "name": "updateDeliveries",
              "description": "Updates multiple existing Deliveries (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllDeliveries",
              "description": "Updates Deliveries that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteDelivery",
              "description": "Deletes a Delivery by id or deliveryNumber.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteDeliveries",
              "description": "Deletes multiple Deliveries by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllDeliveries",
              "description": "Deletes Deliveries that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "confirmBillingForDelivery",
              "description": "Confirms a Delivery to be exported to billing.",
              "deprecationReason": null
            },
            {
              "name": "createForwarder",
              "description": "Creates a new Forwarder",
              "deprecationReason": null
            },
            {
              "name": "createForwarders",
              "description": "Creates multiple new Forwarders",
              "deprecationReason": null
            },
            {
              "name": "updateForwarder",
              "description": "Updates an existing Forwarder",
              "deprecationReason": null
            },
            {
              "name": "updateForwarders",
              "description": "Updates multiple existing Forwarders (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllForwarders",
              "description": "Updates Forwarders that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteForwarder",
              "description": "Deletes a Forwarder by id or name.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteForwarders",
              "description": "Deletes multiple Forwarders by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllForwarders",
              "description": "Deletes Forwarders that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createOnlyRelations",
              "description": "Creates a new OnlyRelations",
              "deprecationReason": null
            },
            {
              "name": "updateOnlyRelations",
              "description": "Updates an existing OnlyRelations",
              "deprecationReason": null
            },
            {
              "name": "deleteOnlyRelations",
              "description": "Deletes a OnlyRelations by id",
              "deprecationReason": null
            },
            {
              "name": "deleteAllOnlyRelations",
              "description": "Deletes OnlyRelations that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createHandlingUnit",
              "description": "Creates a new HandlingUnit",
              "deprecationReason": null
            },
            {
              "name": "createHandlingUnits",
              "description": "Creates multiple new HandlingUnits",
              "deprecationReason": null
            },
            {
              "name": "updateHandlingUnit",
              "description": "Updates an existing HandlingUnit",
              "deprecationReason": null
            },
            {
              "name": "updateHandlingUnits",
              "description": "Updates multiple existing HandlingUnits (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllHandlingUnits",
              "description": "Updates HandlingUnits that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteHandlingUnit",
              "description": "Deletes a HandlingUnit by id or id.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteHandlingUnits",
              "description": "Deletes multiple HandlingUnits by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllHandlingUnits",
              "description": "Deletes HandlingUnits that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createNumberRange",
              "description": "Creates a new NumberRange",
              "deprecationReason": null
            },
            {
              "name": "createNumberRanges",
              "description": "Creates multiple new NumberRanges",
              "deprecationReason": null
            },
            {
              "name": "updateNumberRange",
              "description": "Updates an existing NumberRange",
              "deprecationReason": null
            },
            {
              "name": "updateNumberRanges",
              "description": "Updates multiple existing NumberRanges (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllNumberRanges",
              "description": "Updates NumberRanges that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteNumberRange",
              "description": "Deletes a NumberRange by id or name.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteNumberRanges",
              "description": "Deletes multiple NumberRanges by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllNumberRanges",
              "description": "Deletes NumberRanges that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "createSecretKey",
              "description": "Creates a new SecretKey",
              "deprecationReason": null
            },
            {
              "name": "createSecretKeys",
              "description": "Creates multiple new SecretKeys",
              "deprecationReason": null
            },
            {
              "name": "updateSecretKey",
              "description": "Updates an existing SecretKey",
              "deprecationReason": null
            },
            {
              "name": "updateSecretKeys",
              "description": "Updates multiple existing SecretKeys (referenced by their ids)",
              "deprecationReason": null
            },
            {
              "name": "updateAllSecretKeys",
              "description": "Updates SecretKeys that match a specified filter",
              "deprecationReason": null
            },
            {
              "name": "deleteSecretKey",
              "description": "Deletes a SecretKey by id or key.\n\nYou should pass a non-null value to exactly one of the arguments.",
              "deprecationReason": null
            },
            {
              "name": "deleteSecretKeys",
              "description": "Deletes multiple SecretKeys by their ids.\n\nIDs that are not found are silently ignored.",
              "deprecationReason": null
            },
            {
              "name": "deleteAllSecretKeys",
              "description": "Deletes SecretKeys that match a specified filter",
              "deprecationReason": null
            }
          ],
          "inputFields": null
        }
      ]
    }
  }
}
