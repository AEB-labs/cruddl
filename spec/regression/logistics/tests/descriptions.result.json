{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "Query",
          "description": "The Query type for the root namespace",
          "fields": [
            {
              "name": "Country",
              "description": "Finds a Country by id or isoCode.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "allCountries",
              "description": null
            },
            {
              "name": "_allCountriesMeta",
              "description": null
            },
            {
              "name": "Delivery",
              "description": "Finds a Delivery by id or deliveryNumber.\n\nYou should pass a non-null value to exactly one of the arguments.\n\nA delivery"
            },
            {
              "name": "allDeliveries",
              "description": "A delivery"
            },
            {
              "name": "_allDeliveriesMeta",
              "description": "A delivery"
            },
            {
              "name": "quickSearchDeliveries",
              "description": "Searches for Deliveries using QuickSearch."
            },
            {
              "name": "_quickSearchDeliveriesMeta",
              "description": "Searches for Deliveries using QuickSearch."
            },
            {
              "name": "Forwarder",
              "description": "Finds a Forwarder by id or name.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "allForwarders",
              "description": null
            },
            {
              "name": "_allForwardersMeta",
              "description": null
            },
            {
              "name": "OnlyRelations",
              "description": "Finds a OnlyRelations by id"
            },
            {
              "name": "allOnlyRelations",
              "description": null
            },
            {
              "name": "_allOnlyRelationsMeta",
              "description": null
            },
            {
              "name": "HandlingUnit",
              "description": "Finds a HandlingUnit by id or id.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "allHandlingUnits",
              "description": null
            },
            {
              "name": "_allHandlingUnitsMeta",
              "description": null
            },
            {
              "name": "NumberRange",
              "description": "Finds a NumberRange by id"
            },
            {
              "name": "allNumberRanges",
              "description": null
            },
            {
              "name": "_allNumberRangesMeta",
              "description": null
            },
            {
              "name": "SecretKey",
              "description": "Finds a SecretKey by id or key.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "allSecretKeys",
              "description": null
            },
            {
              "name": "_allSecretKeysMeta",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Country",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "isoCode",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "_descriptionMeta",
              "description": null
            },
            {
              "name": "totalInvestment",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "DateTime",
          "description": "The `DateTime` scalar type represents a point in time in UTC, in a format specified by ISO 8601, such as `2007-12-03T10:15:30Z` or `2007-12-03T10:15:30.123Z`.\n\nThis scalar type rejects values without timezone specifier or with a timezone other than UTC. See also `LocalDate` and `LocalTime` for values without timezone specifier. To store Date/time values with timezones other than UTC, define a value object type with the fields you need.\n\nThe second part is added if not specified, e.g. `2007-12-03T12:34Z` is converted to `2007-12-03T12:34:00Z`. Second fraction digits are cut off at the nearest three-digit group, e.g. `2007-12-03T00:00:00.1234Z` is converted to `2007-12-03T00:00:00.123400Z`.\n\nValues with leap seconds are shifted back by one second, but this behavior should not be relied upon.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "TranslationFilter",
          "description": "Filter type for `Translation`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "languageIsoCode",
              "description": "Checks if `languageIsoCode` equals a specified string, case-sensitively.\n\nIf an index exists on `languageIsoCode`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "languageIsoCode_not",
              "description": "Checks if `languageIsoCode` does not equal a specified string, case-sensitively."
            },
            {
              "name": "languageIsoCode_in",
              "description": null
            },
            {
              "name": "languageIsoCode_not_in",
              "description": null
            },
            {
              "name": "languageIsoCode_lt",
              "description": null
            },
            {
              "name": "languageIsoCode_lte",
              "description": null
            },
            {
              "name": "languageIsoCode_gt",
              "description": null
            },
            {
              "name": "languageIsoCode_gte",
              "description": null
            },
            {
              "name": "languageIsoCode_contains",
              "description": "Checks if `languageIsoCode` contains a specified string, case-sensitively."
            },
            {
              "name": "languageIsoCode_not_contains",
              "description": null
            },
            {
              "name": "languageIsoCode_starts_with",
              "description": "Checks if `languageIsoCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "languageIsoCode_not_starts_with",
              "description": null
            },
            {
              "name": "languageIsoCode_ends_with",
              "description": "Checks if `languageIsoCode` ends with a specified string, case-sensitively."
            },
            {
              "name": "languageIsoCode_not_ends_with",
              "description": null
            },
            {
              "name": "languageIsoCode_like",
              "description": "Matches `languageIsoCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `languageIsoCode`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "languageIsoCode_not_like",
              "description": "Checks if `languageIsoCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "translation",
              "description": "Checks if `translation` equals a specified string, case-sensitively.\n\nIf an index exists on `translation`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "translation_not",
              "description": "Checks if `translation` does not equal a specified string, case-sensitively."
            },
            {
              "name": "translation_in",
              "description": null
            },
            {
              "name": "translation_not_in",
              "description": null
            },
            {
              "name": "translation_lt",
              "description": null
            },
            {
              "name": "translation_lte",
              "description": null
            },
            {
              "name": "translation_gt",
              "description": null
            },
            {
              "name": "translation_gte",
              "description": null
            },
            {
              "name": "translation_contains",
              "description": "Checks if `translation` contains a specified string, case-sensitively."
            },
            {
              "name": "translation_not_contains",
              "description": null
            },
            {
              "name": "translation_starts_with",
              "description": "Checks if `translation` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "translation_not_starts_with",
              "description": null
            },
            {
              "name": "translation_ends_with",
              "description": "Checks if `translation` ends with a specified string, case-sensitively."
            },
            {
              "name": "translation_not_ends_with",
              "description": null
            },
            {
              "name": "translation_like",
              "description": "Matches `translation` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `translation`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "translation_not_like",
              "description": "Checks if `translation` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "TranslationOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. ",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Translation",
          "description": null,
          "fields": [
            {
              "name": "languageIsoCode",
              "description": null
            },
            {
              "name": "translation",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "_QueryMeta",
          "description": "Provides aggregated information about a collection or list",
          "fields": [
            {
              "name": "count",
              "description": "The number of items in the collection or list, after applying the filter if specified."
            }
          ],
          "inputFields": null
        },
        {
          "name": "CountryFilter",
          "description": "Filter type for `Country`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "isoCode",
              "description": "Checks if `isoCode` equals a specified string, case-sensitively.\n\nIf an index exists on `isoCode`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "isoCode_not",
              "description": "Checks if `isoCode` does not equal a specified string, case-sensitively."
            },
            {
              "name": "isoCode_in",
              "description": null
            },
            {
              "name": "isoCode_not_in",
              "description": null
            },
            {
              "name": "isoCode_lt",
              "description": null
            },
            {
              "name": "isoCode_lte",
              "description": null
            },
            {
              "name": "isoCode_gt",
              "description": null
            },
            {
              "name": "isoCode_gte",
              "description": null
            },
            {
              "name": "isoCode_contains",
              "description": "Checks if `isoCode` contains a specified string, case-sensitively."
            },
            {
              "name": "isoCode_not_contains",
              "description": null
            },
            {
              "name": "isoCode_starts_with",
              "description": "Checks if `isoCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "isoCode_not_starts_with",
              "description": null
            },
            {
              "name": "isoCode_ends_with",
              "description": "Checks if `isoCode` ends with a specified string, case-sensitively."
            },
            {
              "name": "isoCode_not_ends_with",
              "description": null
            },
            {
              "name": "isoCode_like",
              "description": "Matches `isoCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `isoCode`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "isoCode_not_like",
              "description": "Checks if `isoCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "description_some",
              "description": "Makes sure at least one of the items in \"description\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has at least one item."
            },
            {
              "name": "description_every",
              "description": "Makes sure all items in `description` match a certain filter."
            },
            {
              "name": "description_none",
              "description": "Makes sure none of the items in `description` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `description` has no items."
            },
            {
              "name": "totalInvestment",
              "description": "Checks if `totalInvestment` equals a specified string, case-sensitively.\n\nIf an index exists on `totalInvestment`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "totalInvestment_not",
              "description": "Checks if `totalInvestment` does not equal a specified string, case-sensitively."
            },
            {
              "name": "totalInvestment_in",
              "description": null
            },
            {
              "name": "totalInvestment_not_in",
              "description": null
            },
            {
              "name": "totalInvestment_lt",
              "description": null
            },
            {
              "name": "totalInvestment_lte",
              "description": null
            },
            {
              "name": "totalInvestment_gt",
              "description": null
            },
            {
              "name": "totalInvestment_gte",
              "description": null
            },
            {
              "name": "totalInvestment_contains",
              "description": "Checks if `totalInvestment` contains a specified string, case-sensitively."
            },
            {
              "name": "totalInvestment_not_contains",
              "description": null
            },
            {
              "name": "totalInvestment_starts_with",
              "description": "Checks if `totalInvestment` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "totalInvestment_not_starts_with",
              "description": null
            },
            {
              "name": "totalInvestment_ends_with",
              "description": "Checks if `totalInvestment` ends with a specified string, case-sensitively."
            },
            {
              "name": "totalInvestment_not_ends_with",
              "description": null
            },
            {
              "name": "totalInvestment_like",
              "description": "Matches `totalInvestment` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `totalInvestment`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "totalInvestment_not_like",
              "description": "Checks if `totalInvestment` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "CountryOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Delivery",
          "description": "A delivery",
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "deliveryNumber",
              "description": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery"
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee"
            },
            {
              "name": "contentInfo",
              "description": null
            },
            {
              "name": "_contentInfoMeta",
              "description": null
            },
            {
              "name": "dgInfo",
              "description": null
            },
            {
              "name": "items",
              "description": null
            },
            {
              "name": "_itemsMeta",
              "description": null
            },
            {
              "name": "handlingUnits",
              "description": "The handling units the items of this delivery are packaged in"
            },
            {
              "name": "_handlingUnitsMeta",
              "description": "The handling units the items of this delivery are packaged in"
            },
            {
              "name": "destinationCountry",
              "description": "The country to where the delivery should be shipped\n\nThis field references a `Country` by its `isoCode` field"
            },
            {
              "name": "destinationCountryISOCode",
              "description": null
            },
            {
              "name": "originCountry",
              "description": "This field references a `Country` by its `isoCode` field"
            },
            {
              "name": "shippedAt",
              "description": null
            },
            {
              "name": "totalValue",
              "description": null
            },
            {
              "name": "forwarder",
              "description": null
            },
            {
              "name": "destination",
              "description": null
            },
            {
              "name": "defaultValueString",
              "description": null
            },
            {
              "name": "defaultValueString2",
              "description": null
            },
            {
              "name": "defaultValueInt",
              "description": null
            },
            {
              "name": "defaultValueTrue",
              "description": null
            },
            {
              "name": "defaultValueFalse",
              "description": null
            },
            {
              "name": "defaultValueFloat",
              "description": null
            },
            {
              "name": "defaultValueEnum",
              "description": null
            },
            {
              "name": "pickupDate",
              "description": null
            },
            {
              "name": "pickupTimeStart",
              "description": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null
            },
            {
              "name": "dynamicData",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "enumQuickSearch",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "Address",
          "description": null,
          "fields": [
            {
              "name": "street",
              "description": null
            },
            {
              "name": "city",
              "description": null
            },
            {
              "name": "zipCode",
              "description": null
            },
            {
              "name": "country",
              "description": "This field references a `Country` by its `isoCode` field"
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "DangerousGoodsInfo",
          "description": null,
          "fields": [
            {
              "name": "unNumber",
              "description": null
            },
            {
              "name": "flashpoint",
              "description": null
            },
            {
              "name": "notices",
              "description": null
            },
            {
              "name": "details",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "DangerousGoodsDetails",
          "description": null,
          "fields": [
            {
              "name": "expiryDate",
              "description": null
            },
            {
              "name": "comment",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "LocalDate",
          "description": "The `LocalDate` scalar type represents a date without time zone in a format specified by ISO 8601, such as 2007-12-03.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryItemFilter",
          "description": "Filter type for `DeliveryItem`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "itemNumber",
              "description": "Checks if `itemNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `itemNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "itemNumber_not",
              "description": "Checks if `itemNumber` does not equal a specified string, case-sensitively."
            },
            {
              "name": "itemNumber_in",
              "description": null
            },
            {
              "name": "itemNumber_not_in",
              "description": null
            },
            {
              "name": "itemNumber_lt",
              "description": null
            },
            {
              "name": "itemNumber_lte",
              "description": null
            },
            {
              "name": "itemNumber_gt",
              "description": null
            },
            {
              "name": "itemNumber_gte",
              "description": null
            },
            {
              "name": "itemNumber_contains",
              "description": "Checks if `itemNumber` contains a specified string, case-sensitively."
            },
            {
              "name": "itemNumber_not_contains",
              "description": null
            },
            {
              "name": "itemNumber_starts_with",
              "description": "Checks if `itemNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "itemNumber_not_starts_with",
              "description": null
            },
            {
              "name": "itemNumber_ends_with",
              "description": "Checks if `itemNumber` ends with a specified string, case-sensitively."
            },
            {
              "name": "itemNumber_not_ends_with",
              "description": null
            },
            {
              "name": "itemNumber_like",
              "description": "Matches `itemNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `itemNumber`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "itemNumber_not_like",
              "description": "Checks if `itemNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "quantity",
              "description": "Checks if `quantity` equals a specified value.\n\nIf an index exists on `quantity`, it can be used."
            },
            {
              "name": "quantity_not",
              "description": "Checks if `quantity` does not equal a specified value"
            },
            {
              "name": "quantity_in",
              "description": null
            },
            {
              "name": "quantity_not_in",
              "description": null
            },
            {
              "name": "quantity_lt",
              "description": null
            },
            {
              "name": "quantity_lte",
              "description": null
            },
            {
              "name": "quantity_gt",
              "description": null
            },
            {
              "name": "quantity_gte",
              "description": null
            },
            {
              "name": "handlingUnit",
              "description": "Filters the through `id` referenced HandlingUnits that fulfills the given requirements.\n\n Checks if `handlingUnit` is not null, and allows to filter based on its fields."
            },
            {
              "name": "dgInfo",
              "description": "Allows to filter on the fields of `dgInfo`.\n\nNote that `dgInfo` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "HandlingUnitFilter",
          "description": "Filter type for `HandlingUnit`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "huNumber",
              "description": "Checks if `huNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `huNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "huNumber_not",
              "description": "Checks if `huNumber` does not equal a specified string, case-sensitively."
            },
            {
              "name": "huNumber_in",
              "description": null
            },
            {
              "name": "huNumber_not_in",
              "description": null
            },
            {
              "name": "huNumber_lt",
              "description": null
            },
            {
              "name": "huNumber_lte",
              "description": null
            },
            {
              "name": "huNumber_gt",
              "description": null
            },
            {
              "name": "huNumber_gte",
              "description": null
            },
            {
              "name": "huNumber_contains",
              "description": "Checks if `huNumber` contains a specified string, case-sensitively."
            },
            {
              "name": "huNumber_not_contains",
              "description": null
            },
            {
              "name": "huNumber_starts_with",
              "description": "Checks if `huNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "huNumber_not_starts_with",
              "description": null
            },
            {
              "name": "huNumber_ends_with",
              "description": "Checks if `huNumber` ends with a specified string, case-sensitively."
            },
            {
              "name": "huNumber_not_ends_with",
              "description": null
            },
            {
              "name": "huNumber_like",
              "description": "Matches `huNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `huNumber`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "huNumber_not_like",
              "description": "Checks if `huNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "delivery",
              "description": "Checks if `delivery` is not null, and allows to filter based on its fields."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "DeliveryFilter",
          "description": "Filter type for `Delivery`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "deliveryNumber",
              "description": "Checks if `deliveryNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `deliveryNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "deliveryNumber_not",
              "description": "Checks if `deliveryNumber` does not equal a specified string, case-sensitively."
            },
            {
              "name": "deliveryNumber_in",
              "description": null
            },
            {
              "name": "deliveryNumber_not_in",
              "description": null
            },
            {
              "name": "deliveryNumber_lt",
              "description": null
            },
            {
              "name": "deliveryNumber_lte",
              "description": null
            },
            {
              "name": "deliveryNumber_gt",
              "description": null
            },
            {
              "name": "deliveryNumber_gte",
              "description": null
            },
            {
              "name": "deliveryNumber_contains",
              "description": "Checks if `deliveryNumber` contains a specified string, case-sensitively."
            },
            {
              "name": "deliveryNumber_not_contains",
              "description": null
            },
            {
              "name": "deliveryNumber_starts_with",
              "description": "Checks if `deliveryNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "deliveryNumber_not_starts_with",
              "description": null
            },
            {
              "name": "deliveryNumber_ends_with",
              "description": "Checks if `deliveryNumber` ends with a specified string, case-sensitively."
            },
            {
              "name": "deliveryNumber_not_ends_with",
              "description": null
            },
            {
              "name": "deliveryNumber_like",
              "description": "Matches `deliveryNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `deliveryNumber`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "deliveryNumber_not_like",
              "description": "Checks if `deliveryNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "serialNumbers_some",
              "description": "Makes sure at least one of the items in \"serialNumbers\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `serialNumbers` has at least one item."
            },
            {
              "name": "serialNumbers_every",
              "description": "Makes sure all items in `serialNumbers` match a certain filter."
            },
            {
              "name": "serialNumbers_none",
              "description": "Makes sure none of the items in `serialNumbers` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `serialNumbers` has no items."
            },
            {
              "name": "consignee",
              "description": "Checks if `consignee` is not null, and allows to filter based on its fields."
            },
            {
              "name": "contentInfo_some",
              "description": "Makes sure at least one of the items in \"contentInfo\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `contentInfo` has at least one item."
            },
            {
              "name": "contentInfo_every",
              "description": "Makes sure all items in `contentInfo` match a certain filter."
            },
            {
              "name": "contentInfo_none",
              "description": "Makes sure none of the items in `contentInfo` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `contentInfo` has no items."
            },
            {
              "name": "dgInfo",
              "description": "Allows to filter on the fields of `dgInfo`.\n\nNote that `dgInfo` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect."
            },
            {
              "name": "items_some",
              "description": "Makes sure at least one of the items in \"items\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `items` has at least one item."
            },
            {
              "name": "items_every",
              "description": "Makes sure all items in `items` match a certain filter."
            },
            {
              "name": "items_none",
              "description": "Makes sure none of the items in `items` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `items` has no items."
            },
            {
              "name": "handlingUnits_some",
              "description": "Makes sure at least one of the items in \"handlingUnits\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `handlingUnits` has at least one item."
            },
            {
              "name": "handlingUnits_every",
              "description": "Makes sure all items in `handlingUnits` match a certain filter."
            },
            {
              "name": "handlingUnits_none",
              "description": "Makes sure none of the items in `handlingUnits` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `handlingUnits` has no items."
            },
            {
              "name": "destinationCountry",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `destinationCountry` is not null, and allows to filter based on its fields."
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Checks if `destinationCountryISOCode` equals a specified string, case-sensitively.\n\nIf an index exists on `destinationCountryISOCode`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "destinationCountryISOCode_not",
              "description": "Checks if `destinationCountryISOCode` does not equal a specified string, case-sensitively."
            },
            {
              "name": "destinationCountryISOCode_in",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_not_in",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_lt",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_lte",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_gt",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_gte",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_contains",
              "description": "Checks if `destinationCountryISOCode` contains a specified string, case-sensitively."
            },
            {
              "name": "destinationCountryISOCode_not_contains",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_starts_with",
              "description": "Checks if `destinationCountryISOCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "destinationCountryISOCode_not_starts_with",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_ends_with",
              "description": "Checks if `destinationCountryISOCode` ends with a specified string, case-sensitively."
            },
            {
              "name": "destinationCountryISOCode_not_ends_with",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_like",
              "description": "Matches `destinationCountryISOCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `destinationCountryISOCode`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "destinationCountryISOCode_not_like",
              "description": "Checks if `destinationCountryISOCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "originCountry",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `originCountry` is not null, and allows to filter based on its fields."
            },
            {
              "name": "shippedAt",
              "description": "Checks if `shippedAt` equals a specified value.\n\nIf an index exists on `shippedAt`, it can be used."
            },
            {
              "name": "shippedAt_not",
              "description": "Checks if `shippedAt` does not equal a specified value"
            },
            {
              "name": "shippedAt_in",
              "description": null
            },
            {
              "name": "shippedAt_not_in",
              "description": null
            },
            {
              "name": "shippedAt_lt",
              "description": null
            },
            {
              "name": "shippedAt_lte",
              "description": null
            },
            {
              "name": "shippedAt_gt",
              "description": null
            },
            {
              "name": "shippedAt_gte",
              "description": null
            },
            {
              "name": "totalValue",
              "description": "Checks if `totalValue` equals a specified string, case-sensitively.\n\nIf an index exists on `totalValue`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "totalValue_not",
              "description": "Checks if `totalValue` does not equal a specified string, case-sensitively."
            },
            {
              "name": "totalValue_in",
              "description": null
            },
            {
              "name": "totalValue_not_in",
              "description": null
            },
            {
              "name": "totalValue_lt",
              "description": null
            },
            {
              "name": "totalValue_lte",
              "description": null
            },
            {
              "name": "totalValue_gt",
              "description": null
            },
            {
              "name": "totalValue_gte",
              "description": null
            },
            {
              "name": "totalValue_contains",
              "description": "Checks if `totalValue` contains a specified string, case-sensitively."
            },
            {
              "name": "totalValue_not_contains",
              "description": null
            },
            {
              "name": "totalValue_starts_with",
              "description": "Checks if `totalValue` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "totalValue_not_starts_with",
              "description": null
            },
            {
              "name": "totalValue_ends_with",
              "description": "Checks if `totalValue` ends with a specified string, case-sensitively."
            },
            {
              "name": "totalValue_not_ends_with",
              "description": null
            },
            {
              "name": "totalValue_like",
              "description": "Matches `totalValue` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `totalValue`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "totalValue_not_like",
              "description": "Checks if `totalValue` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "forwarder",
              "description": "Checks if `forwarder` is not null, and allows to filter based on its fields."
            },
            {
              "name": "destination",
              "description": "Checks if `destination` is not null, and allows to filter based on its fields."
            },
            {
              "name": "defaultValueString",
              "description": "Checks if `defaultValueString` equals a specified string, case-sensitively.\n\nIf an index exists on `defaultValueString`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "defaultValueString_not",
              "description": "Checks if `defaultValueString` does not equal a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString_in",
              "description": null
            },
            {
              "name": "defaultValueString_not_in",
              "description": null
            },
            {
              "name": "defaultValueString_lt",
              "description": null
            },
            {
              "name": "defaultValueString_lte",
              "description": null
            },
            {
              "name": "defaultValueString_gt",
              "description": null
            },
            {
              "name": "defaultValueString_gte",
              "description": null
            },
            {
              "name": "defaultValueString_contains",
              "description": "Checks if `defaultValueString` contains a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString_not_contains",
              "description": null
            },
            {
              "name": "defaultValueString_starts_with",
              "description": "Checks if `defaultValueString` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "defaultValueString_not_starts_with",
              "description": null
            },
            {
              "name": "defaultValueString_ends_with",
              "description": "Checks if `defaultValueString` ends with a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString_not_ends_with",
              "description": null
            },
            {
              "name": "defaultValueString_like",
              "description": "Matches `defaultValueString` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `defaultValueString`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "defaultValueString_not_like",
              "description": "Checks if `defaultValueString` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "defaultValueString2",
              "description": "Checks if `defaultValueString2` equals a specified string, case-sensitively.\n\nIf an index exists on `defaultValueString2`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "defaultValueString2_not",
              "description": "Checks if `defaultValueString2` does not equal a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString2_in",
              "description": null
            },
            {
              "name": "defaultValueString2_not_in",
              "description": null
            },
            {
              "name": "defaultValueString2_lt",
              "description": null
            },
            {
              "name": "defaultValueString2_lte",
              "description": null
            },
            {
              "name": "defaultValueString2_gt",
              "description": null
            },
            {
              "name": "defaultValueString2_gte",
              "description": null
            },
            {
              "name": "defaultValueString2_contains",
              "description": "Checks if `defaultValueString2` contains a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString2_not_contains",
              "description": null
            },
            {
              "name": "defaultValueString2_starts_with",
              "description": "Checks if `defaultValueString2` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "defaultValueString2_not_starts_with",
              "description": null
            },
            {
              "name": "defaultValueString2_ends_with",
              "description": "Checks if `defaultValueString2` ends with a specified string, case-sensitively."
            },
            {
              "name": "defaultValueString2_not_ends_with",
              "description": null
            },
            {
              "name": "defaultValueString2_like",
              "description": "Matches `defaultValueString2` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `defaultValueString2`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "defaultValueString2_not_like",
              "description": "Checks if `defaultValueString2` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "defaultValueInt",
              "description": "Checks if `defaultValueInt` equals a specified value.\n\nIf an index exists on `defaultValueInt`, it can be used."
            },
            {
              "name": "defaultValueInt_not",
              "description": "Checks if `defaultValueInt` does not equal a specified value"
            },
            {
              "name": "defaultValueInt_in",
              "description": null
            },
            {
              "name": "defaultValueInt_not_in",
              "description": null
            },
            {
              "name": "defaultValueInt_lt",
              "description": null
            },
            {
              "name": "defaultValueInt_lte",
              "description": null
            },
            {
              "name": "defaultValueInt_gt",
              "description": null
            },
            {
              "name": "defaultValueInt_gte",
              "description": null
            },
            {
              "name": "defaultValueTrue",
              "description": "Checks if `defaultValueTrue` equals a specified value.\n\nIf an index exists on `defaultValueTrue`, it can be used."
            },
            {
              "name": "defaultValueTrue_not",
              "description": "Checks if `defaultValueTrue` does not equal a specified value"
            },
            {
              "name": "defaultValueFalse",
              "description": "Checks if `defaultValueFalse` equals a specified value.\n\nIf an index exists on `defaultValueFalse`, it can be used."
            },
            {
              "name": "defaultValueFalse_not",
              "description": "Checks if `defaultValueFalse` does not equal a specified value"
            },
            {
              "name": "defaultValueFloat",
              "description": "Checks if `defaultValueFloat` equals a specified value.\n\nIf an index exists on `defaultValueFloat`, it can be used."
            },
            {
              "name": "defaultValueFloat_not",
              "description": "Checks if `defaultValueFloat` does not equal a specified value"
            },
            {
              "name": "defaultValueFloat_in",
              "description": null
            },
            {
              "name": "defaultValueFloat_not_in",
              "description": null
            },
            {
              "name": "defaultValueFloat_lt",
              "description": null
            },
            {
              "name": "defaultValueFloat_lte",
              "description": null
            },
            {
              "name": "defaultValueFloat_gt",
              "description": null
            },
            {
              "name": "defaultValueFloat_gte",
              "description": null
            },
            {
              "name": "defaultValueEnum",
              "description": "Checks if `defaultValueEnum` equals a specified value.\n\nIf an index exists on `defaultValueEnum`, it can be used."
            },
            {
              "name": "defaultValueEnum_not",
              "description": "Checks if `defaultValueEnum` does not equal a specified value"
            },
            {
              "name": "defaultValueEnum_in",
              "description": null
            },
            {
              "name": "defaultValueEnum_not_in",
              "description": null
            },
            {
              "name": "pickupDate",
              "description": "Checks if `pickupDate` equals a specified value.\n\nIf an index exists on `pickupDate`, it can be used."
            },
            {
              "name": "pickupDate_not",
              "description": "Checks if `pickupDate` does not equal a specified value"
            },
            {
              "name": "pickupDate_in",
              "description": null
            },
            {
              "name": "pickupDate_not_in",
              "description": null
            },
            {
              "name": "pickupDate_lt",
              "description": null
            },
            {
              "name": "pickupDate_lte",
              "description": null
            },
            {
              "name": "pickupDate_gt",
              "description": null
            },
            {
              "name": "pickupDate_gte",
              "description": null
            },
            {
              "name": "pickupTimeStart",
              "description": "Checks if `pickupTimeStart` equals a specified value.\n\nIf an index exists on `pickupTimeStart`, it can be used."
            },
            {
              "name": "pickupTimeStart_not",
              "description": "Checks if `pickupTimeStart` does not equal a specified value"
            },
            {
              "name": "pickupTimeStart_in",
              "description": null
            },
            {
              "name": "pickupTimeStart_not_in",
              "description": null
            },
            {
              "name": "pickupTimeStart_lt",
              "description": null
            },
            {
              "name": "pickupTimeStart_lte",
              "description": null
            },
            {
              "name": "pickupTimeStart_gt",
              "description": null
            },
            {
              "name": "pickupTimeStart_gte",
              "description": null
            },
            {
              "name": "pickupTimeEnd",
              "description": "Checks if `pickupTimeEnd` equals a specified value.\n\nIf an index exists on `pickupTimeEnd`, it can be used."
            },
            {
              "name": "pickupTimeEnd_not",
              "description": "Checks if `pickupTimeEnd` does not equal a specified value"
            },
            {
              "name": "pickupTimeEnd_in",
              "description": null
            },
            {
              "name": "pickupTimeEnd_not_in",
              "description": null
            },
            {
              "name": "pickupTimeEnd_lt",
              "description": null
            },
            {
              "name": "pickupTimeEnd_lte",
              "description": null
            },
            {
              "name": "pickupTimeEnd_gt",
              "description": null
            },
            {
              "name": "pickupTimeEnd_gte",
              "description": null
            },
            {
              "name": "description",
              "description": "Checks if `description` equals a specified string, case-sensitively.\n\nIf an index exists on `description`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "description_not",
              "description": "Checks if `description` does not equal a specified string, case-sensitively."
            },
            {
              "name": "description_in",
              "description": null
            },
            {
              "name": "description_not_in",
              "description": null
            },
            {
              "name": "description_lt",
              "description": null
            },
            {
              "name": "description_lte",
              "description": null
            },
            {
              "name": "description_gt",
              "description": null
            },
            {
              "name": "description_gte",
              "description": null
            },
            {
              "name": "description_contains",
              "description": "Checks if `description` contains a specified string, case-sensitively."
            },
            {
              "name": "description_not_contains",
              "description": null
            },
            {
              "name": "description_starts_with",
              "description": "Checks if `description` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "description_not_starts_with",
              "description": null
            },
            {
              "name": "description_ends_with",
              "description": "Checks if `description` ends with a specified string, case-sensitively."
            },
            {
              "name": "description_not_ends_with",
              "description": null
            },
            {
              "name": "description_like",
              "description": "Matches `description` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `description`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "description_not_like",
              "description": "Checks if `description` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "enumQuickSearch",
              "description": "Checks if `enumQuickSearch` equals a specified value.\n\nIf an index exists on `enumQuickSearch`, it can be used."
            },
            {
              "name": "enumQuickSearch_not",
              "description": "Checks if `enumQuickSearch` does not equal a specified value"
            },
            {
              "name": "enumQuickSearch_in",
              "description": null
            },
            {
              "name": "enumQuickSearch_not_in",
              "description": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "StringFilter",
          "description": "Filter type for `String`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "equal",
              "description": "Checks if the value equals a specified string, case-sensitively.\n\nIf an index exists on the value, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "not",
              "description": "Checks if the value does not equal a specified string, case-sensitively."
            },
            {
              "name": "in",
              "description": null
            },
            {
              "name": "not_in",
              "description": null
            },
            {
              "name": "lt",
              "description": null
            },
            {
              "name": "lte",
              "description": null
            },
            {
              "name": "gt",
              "description": null
            },
            {
              "name": "gte",
              "description": null
            },
            {
              "name": "contains",
              "description": "Checks if the value contains a specified string, case-sensitively."
            },
            {
              "name": "not_contains",
              "description": null
            },
            {
              "name": "starts_with",
              "description": "Checks if the value starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "not_starts_with",
              "description": null
            },
            {
              "name": "ends_with",
              "description": "Checks if the value ends with a specified string, case-sensitively."
            },
            {
              "name": "not_ends_with",
              "description": null
            },
            {
              "name": "like",
              "description": "Matches the value against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on the value, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "not_like",
              "description": "Checks if the value does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "AddressFilter",
          "description": "Filter type for `Address`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "street",
              "description": "Checks if `street` equals a specified string, case-sensitively.\n\nIf an index exists on `street`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "street_not",
              "description": "Checks if `street` does not equal a specified string, case-sensitively."
            },
            {
              "name": "street_in",
              "description": null
            },
            {
              "name": "street_not_in",
              "description": null
            },
            {
              "name": "street_lt",
              "description": null
            },
            {
              "name": "street_lte",
              "description": null
            },
            {
              "name": "street_gt",
              "description": null
            },
            {
              "name": "street_gte",
              "description": null
            },
            {
              "name": "street_contains",
              "description": "Checks if `street` contains a specified string, case-sensitively."
            },
            {
              "name": "street_not_contains",
              "description": null
            },
            {
              "name": "street_starts_with",
              "description": "Checks if `street` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "street_not_starts_with",
              "description": null
            },
            {
              "name": "street_ends_with",
              "description": "Checks if `street` ends with a specified string, case-sensitively."
            },
            {
              "name": "street_not_ends_with",
              "description": null
            },
            {
              "name": "street_like",
              "description": "Matches `street` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `street`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "street_not_like",
              "description": "Checks if `street` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "city",
              "description": "Checks if `city` equals a specified string, case-sensitively.\n\nIf an index exists on `city`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "city_not",
              "description": "Checks if `city` does not equal a specified string, case-sensitively."
            },
            {
              "name": "city_in",
              "description": null
            },
            {
              "name": "city_not_in",
              "description": null
            },
            {
              "name": "city_lt",
              "description": null
            },
            {
              "name": "city_lte",
              "description": null
            },
            {
              "name": "city_gt",
              "description": null
            },
            {
              "name": "city_gte",
              "description": null
            },
            {
              "name": "city_contains",
              "description": "Checks if `city` contains a specified string, case-sensitively."
            },
            {
              "name": "city_not_contains",
              "description": null
            },
            {
              "name": "city_starts_with",
              "description": "Checks if `city` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "city_not_starts_with",
              "description": null
            },
            {
              "name": "city_ends_with",
              "description": "Checks if `city` ends with a specified string, case-sensitively."
            },
            {
              "name": "city_not_ends_with",
              "description": null
            },
            {
              "name": "city_like",
              "description": "Matches `city` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `city`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "city_not_like",
              "description": "Checks if `city` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "zipCode",
              "description": "Checks if `zipCode` equals a specified string, case-sensitively.\n\nIf an index exists on `zipCode`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "zipCode_not",
              "description": "Checks if `zipCode` does not equal a specified string, case-sensitively."
            },
            {
              "name": "zipCode_in",
              "description": null
            },
            {
              "name": "zipCode_not_in",
              "description": null
            },
            {
              "name": "zipCode_lt",
              "description": null
            },
            {
              "name": "zipCode_lte",
              "description": null
            },
            {
              "name": "zipCode_gt",
              "description": null
            },
            {
              "name": "zipCode_gte",
              "description": null
            },
            {
              "name": "zipCode_contains",
              "description": "Checks if `zipCode` contains a specified string, case-sensitively."
            },
            {
              "name": "zipCode_not_contains",
              "description": null
            },
            {
              "name": "zipCode_starts_with",
              "description": "Checks if `zipCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "zipCode_not_starts_with",
              "description": null
            },
            {
              "name": "zipCode_ends_with",
              "description": "Checks if `zipCode` ends with a specified string, case-sensitively."
            },
            {
              "name": "zipCode_not_ends_with",
              "description": null
            },
            {
              "name": "zipCode_like",
              "description": "Matches `zipCode` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `zipCode`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "zipCode_not_like",
              "description": "Checks if `zipCode` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "country",
              "description": "Filters the through `isoCode` referenced Countries that fulfills the given requirements.\n\n Checks if `country` is not null, and allows to filter based on its fields."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "DangerousGoodsInfoFilter",
          "description": "Filter type for `DangerousGoodsInfo`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": "Checks if `unNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `unNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "unNumber_not",
              "description": "Checks if `unNumber` does not equal a specified string, case-sensitively."
            },
            {
              "name": "unNumber_in",
              "description": null
            },
            {
              "name": "unNumber_not_in",
              "description": null
            },
            {
              "name": "unNumber_lt",
              "description": null
            },
            {
              "name": "unNumber_lte",
              "description": null
            },
            {
              "name": "unNumber_gt",
              "description": null
            },
            {
              "name": "unNumber_gte",
              "description": null
            },
            {
              "name": "unNumber_contains",
              "description": "Checks if `unNumber` contains a specified string, case-sensitively."
            },
            {
              "name": "unNumber_not_contains",
              "description": null
            },
            {
              "name": "unNumber_starts_with",
              "description": "Checks if `unNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "unNumber_not_starts_with",
              "description": null
            },
            {
              "name": "unNumber_ends_with",
              "description": "Checks if `unNumber` ends with a specified string, case-sensitively."
            },
            {
              "name": "unNumber_not_ends_with",
              "description": null
            },
            {
              "name": "unNumber_like",
              "description": "Matches `unNumber` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `unNumber`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "unNumber_not_like",
              "description": "Checks if `unNumber` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "flashpoint",
              "description": "Checks if `flashpoint` equals a specified string, case-sensitively.\n\nIf an index exists on `flashpoint`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "flashpoint_not",
              "description": "Checks if `flashpoint` does not equal a specified string, case-sensitively."
            },
            {
              "name": "flashpoint_in",
              "description": null
            },
            {
              "name": "flashpoint_not_in",
              "description": null
            },
            {
              "name": "flashpoint_lt",
              "description": null
            },
            {
              "name": "flashpoint_lte",
              "description": null
            },
            {
              "name": "flashpoint_gt",
              "description": null
            },
            {
              "name": "flashpoint_gte",
              "description": null
            },
            {
              "name": "flashpoint_contains",
              "description": "Checks if `flashpoint` contains a specified string, case-sensitively."
            },
            {
              "name": "flashpoint_not_contains",
              "description": null
            },
            {
              "name": "flashpoint_starts_with",
              "description": "Checks if `flashpoint` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "flashpoint_not_starts_with",
              "description": null
            },
            {
              "name": "flashpoint_ends_with",
              "description": "Checks if `flashpoint` ends with a specified string, case-sensitively."
            },
            {
              "name": "flashpoint_not_ends_with",
              "description": null
            },
            {
              "name": "flashpoint_like",
              "description": "Matches `flashpoint` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `flashpoint`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "flashpoint_not_like",
              "description": "Checks if `flashpoint` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "notices_some",
              "description": "Makes sure at least one of the items in \"notices\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `notices` has at least one item."
            },
            {
              "name": "notices_every",
              "description": "Makes sure all items in `notices` match a certain filter."
            },
            {
              "name": "notices_none",
              "description": "Makes sure none of the items in `notices` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `notices` has no items."
            },
            {
              "name": "details",
              "description": "Allows to filter on the fields of `details`.\n\nNote that `details` is an entity extension and thus can never be `null`, so specifying `null` to this filter field has no effect."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "DangerousGoodsDetailsFilter",
          "description": "Filter type for `DangerousGoodsDetails`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": "Checks if `expiryDate` equals a specified value.\n\nIf an index exists on `expiryDate`, it can be used."
            },
            {
              "name": "expiryDate_not",
              "description": "Checks if `expiryDate` does not equal a specified value"
            },
            {
              "name": "expiryDate_in",
              "description": null
            },
            {
              "name": "expiryDate_not_in",
              "description": null
            },
            {
              "name": "expiryDate_lt",
              "description": null
            },
            {
              "name": "expiryDate_lte",
              "description": null
            },
            {
              "name": "expiryDate_gt",
              "description": null
            },
            {
              "name": "expiryDate_gte",
              "description": null
            },
            {
              "name": "comment",
              "description": "Checks if `comment` equals a specified string, case-sensitively.\n\nIf an index exists on `comment`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "comment_not",
              "description": "Checks if `comment` does not equal a specified string, case-sensitively."
            },
            {
              "name": "comment_in",
              "description": null
            },
            {
              "name": "comment_not_in",
              "description": null
            },
            {
              "name": "comment_lt",
              "description": null
            },
            {
              "name": "comment_lte",
              "description": null
            },
            {
              "name": "comment_gt",
              "description": null
            },
            {
              "name": "comment_gte",
              "description": null
            },
            {
              "name": "comment_contains",
              "description": "Checks if `comment` contains a specified string, case-sensitively."
            },
            {
              "name": "comment_not_contains",
              "description": null
            },
            {
              "name": "comment_starts_with",
              "description": "Checks if `comment` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "comment_not_starts_with",
              "description": null
            },
            {
              "name": "comment_ends_with",
              "description": "Checks if `comment` ends with a specified string, case-sensitively."
            },
            {
              "name": "comment_not_ends_with",
              "description": null
            },
            {
              "name": "comment_like",
              "description": "Matches `comment` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `comment`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "comment_not_like",
              "description": "Checks if `comment` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "ForwarderFilter",
          "description": "Filter type for `Forwarder`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified string, case-sensitively.\n\nIf an index exists on `name`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified string, case-sensitively."
            },
            {
              "name": "name_in",
              "description": null
            },
            {
              "name": "name_not_in",
              "description": null
            },
            {
              "name": "name_lt",
              "description": null
            },
            {
              "name": "name_lte",
              "description": null
            },
            {
              "name": "name_gt",
              "description": null
            },
            {
              "name": "name_gte",
              "description": null
            },
            {
              "name": "name_contains",
              "description": "Checks if `name` contains a specified string, case-sensitively."
            },
            {
              "name": "name_not_contains",
              "description": null
            },
            {
              "name": "name_starts_with",
              "description": "Checks if `name` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "name_not_starts_with",
              "description": null
            },
            {
              "name": "name_ends_with",
              "description": "Checks if `name` ends with a specified string, case-sensitively."
            },
            {
              "name": "name_not_ends_with",
              "description": null
            },
            {
              "name": "name_like",
              "description": "Matches `name` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `name`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "name_not_like",
              "description": "Checks if `name` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "deliveries_some",
              "description": "Makes sure at least one of the items in \"deliveries\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has at least one item."
            },
            {
              "name": "deliveries_every",
              "description": "Makes sure all items in `deliveries` match a certain filter."
            },
            {
              "name": "deliveries_none",
              "description": "Makes sure none of the items in `deliveries` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has no items."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). ",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Foobarit",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "LocalTime",
          "description": "The `LocalTime` scalar type represents a time without time zone in a format specified by ISO 8601, such as 10:15:30 or 17:05:03.521.\n\nThe valid range is between 00:00:00 and 23:59:59.999999999. 24:00 is not allowed to avoid bugs in clients that treat 24:00 as 0:00.\n\nThe seconds part is cut off if it is zero, e.g. 12:34:00 is converted to 12:34. Second fraction digits are cut off at the nearest three-digit group, e.g. 00:00:00.1234 is converted to 00:00:00.123400.\n\nLeap seconds can not be specified.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryItemOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryItem",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "itemNumber",
              "description": null
            },
            {
              "name": "quantity",
              "description": null
            },
            {
              "name": "handlingUnit",
              "description": "This field references a `HandlingUnit` by its `id` field"
            },
            {
              "name": "dgInfo",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "HandlingUnit",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "huNumber",
              "description": null
            },
            {
              "name": "delivery",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "HandlingUnitOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Forwarder",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "deliveries",
              "description": null
            },
            {
              "name": "_deliveriesMeta",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "DeliveryOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "JSON",
          "description": "The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "DeliveryQuickSearchFilter",
          "description": "QuickSearchFilter type for `Delivery`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "deliveryNumber",
              "description": "Checks if `deliveryNumber` equals a specified string, case-sensitively.\n\nIf an index exists on `deliveryNumber`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "deliveryNumber_not",
              "description": "Checks if `deliveryNumber` does not equal a specified string, case-sensitively."
            },
            {
              "name": "deliveryNumber_in",
              "description": null
            },
            {
              "name": "deliveryNumber_not_in",
              "description": null
            },
            {
              "name": "deliveryNumber_starts_with",
              "description": "Checks if `deliveryNumber` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "deliveryNumber_not_starts_with",
              "description": null
            },
            {
              "name": "consignee",
              "description": "Checks if `consignee` is not null, and allows to filter based on its fields."
            },
            {
              "name": "itemsAggregation",
              "description": "Checks if `items` is not null, and allows to filter based on its fields."
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Checks if `destinationCountryISOCode` equals a specified string, case-sensitively.\n\nIf an index exists on `destinationCountryISOCode`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "destinationCountryISOCode_not",
              "description": "Checks if `destinationCountryISOCode` does not equal a specified string, case-sensitively."
            },
            {
              "name": "destinationCountryISOCode_in",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_not_in",
              "description": null
            },
            {
              "name": "destinationCountryISOCode_starts_with",
              "description": "Checks if `destinationCountryISOCode` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "destinationCountryISOCode_not_starts_with",
              "description": null
            },
            {
              "name": "description_contains_any_word",
              "description": null
            },
            {
              "name": "description_not_contains_any_word",
              "description": null
            },
            {
              "name": "description_contains_all_words",
              "description": null
            },
            {
              "name": "description_not_contains_all_words",
              "description": null
            },
            {
              "name": "description_contains_all_prefixes",
              "description": null
            },
            {
              "name": "description_not_contains_all_prefixes",
              "description": null
            },
            {
              "name": "description_contains_phrase",
              "description": null
            },
            {
              "name": "description_not_contains_phrase",
              "description": null
            },
            {
              "name": "enumQuickSearch",
              "description": "Checks if `enumQuickSearch` equals a specified value.\n\nIf an index exists on `enumQuickSearch`, it can be used."
            },
            {
              "name": "enumQuickSearch_not",
              "description": "Checks if `enumQuickSearch` does not equal a specified value"
            },
            {
              "name": "enumQuickSearch_in",
              "description": null
            },
            {
              "name": "enumQuickSearch_not_in",
              "description": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "AddressQuickSearchFilter",
          "description": "QuickSearchFilter type for `Address`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "city",
              "description": "Checks if `city` equals a specified string, case-sensitively.\n\nIf an index exists on `city`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "city_not",
              "description": "Checks if `city` does not equal a specified string, case-sensitively."
            },
            {
              "name": "city_in",
              "description": null
            },
            {
              "name": "city_not_in",
              "description": null
            },
            {
              "name": "city_starts_with",
              "description": "Checks if `city` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "city_not_starts_with",
              "description": null
            }
          ]
        },
        {
          "name": "DeliveryItemAggregationQuickSearchFilter",
          "description": "QuickSearchFilter type for `DeliveryItem`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this child entity uniquely within this collection of child entities"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time"
            },
            {
              "name": "quantity",
              "description": "Checks if `quantity` equals a specified value.\n\nIf an index exists on `quantity`, it can be used."
            },
            {
              "name": "quantity_not",
              "description": "Checks if `quantity` does not equal a specified value"
            },
            {
              "name": "quantity_in",
              "description": null
            },
            {
              "name": "quantity_not_in",
              "description": null
            },
            {
              "name": "quantity_lt",
              "description": null
            },
            {
              "name": "quantity_lte",
              "description": null
            },
            {
              "name": "quantity_gt",
              "description": null
            },
            {
              "name": "quantity_gte",
              "description": null
            }
          ]
        },
        {
          "name": "ForwarderOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "OnlyRelations",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "deliveries",
              "description": null
            },
            {
              "name": "_deliveriesMeta",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "OnlyRelationsFilter",
          "description": "Filter type for `OnlyRelations`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "deliveries_some",
              "description": "Makes sure at least one of the items in \"deliveries\" matches a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has at least one item."
            },
            {
              "name": "deliveries_every",
              "description": "Makes sure all items in `deliveries` match a certain filter."
            },
            {
              "name": "deliveries_none",
              "description": "Makes sure none of the items in `deliveries` match a certain filter.\n\nNote that you can specify the empty object for this filter to make sure `deliveries` has no items."
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "OnlyRelationsOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "NumberRange",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "number",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "NumberRangeFilter",
          "description": "Filter type for `NumberRange`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "name",
              "description": "Checks if `name` equals a specified string, case-sensitively.\n\nIf an index exists on `name`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "name_not",
              "description": "Checks if `name` does not equal a specified string, case-sensitively."
            },
            {
              "name": "name_in",
              "description": null
            },
            {
              "name": "name_not_in",
              "description": null
            },
            {
              "name": "name_lt",
              "description": null
            },
            {
              "name": "name_lte",
              "description": null
            },
            {
              "name": "name_gt",
              "description": null
            },
            {
              "name": "name_gte",
              "description": null
            },
            {
              "name": "name_contains",
              "description": "Checks if `name` contains a specified string, case-sensitively."
            },
            {
              "name": "name_not_contains",
              "description": null
            },
            {
              "name": "name_starts_with",
              "description": "Checks if `name` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "name_not_starts_with",
              "description": null
            },
            {
              "name": "name_ends_with",
              "description": "Checks if `name` ends with a specified string, case-sensitively."
            },
            {
              "name": "name_not_ends_with",
              "description": null
            },
            {
              "name": "name_like",
              "description": "Matches `name` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `name`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "name_not_like",
              "description": "Checks if `name` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "number",
              "description": "Checks if `number` equals a specified value.\n\nIf an index exists on `number`, it can be used."
            },
            {
              "name": "number_not",
              "description": "Checks if `number` does not equal a specified value"
            },
            {
              "name": "number_in",
              "description": null
            },
            {
              "name": "number_not_in",
              "description": null
            },
            {
              "name": "number_lt",
              "description": null
            },
            {
              "name": "number_lte",
              "description": null
            },
            {
              "name": "number_gt",
              "description": null
            },
            {
              "name": "number_gte",
              "description": null
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "NumberRangeOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "SecretKey",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "key",
              "description": null
            },
            {
              "name": "value",
              "description": null
            },
            {
              "name": "_cursor",
              "description": "Provides a value that can be supplied to the `after` argument for pagination. Depends on the value of the `orderBy` argument."
            }
          ],
          "inputFields": null
        },
        {
          "name": "SecretKeyFilter",
          "description": "Filter type for `SecretKey`.\n\nAll fields in this type are *and*-combined; see the `or` field for *or*-combination.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "Checks if `id` equals a specified value.\n\nIf an index exists on `id`, it can be used.\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not",
              "description": "Checks if `id` does not equal a specified value\n\nAn auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_not_in",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_lte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gt",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "id_gte",
              "description": "An auto-generated string that identifies this root entity uniquely among others of the same type"
            },
            {
              "name": "createdAt",
              "description": "Checks if `createdAt` equals a specified value.\n\nIf an index exists on `createdAt`, it can be used.\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_not",
              "description": "Checks if `createdAt` does not equal a specified value\n\nThe instant this object has been created"
            },
            {
              "name": "createdAt_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_not_in",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_lte",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gt",
              "description": "The instant this object has been created"
            },
            {
              "name": "createdAt_gte",
              "description": "The instant this object has been created"
            },
            {
              "name": "updatedAt",
              "description": "Checks if `updatedAt` equals a specified value.\n\nIf an index exists on `updatedAt`, it can be used.\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not",
              "description": "Checks if `updatedAt` does not equal a specified value\n\nThe instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_not_in",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_lte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gt",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "updatedAt_gte",
              "description": "The instant this object has been updated the last time (not including relation updates)"
            },
            {
              "name": "key",
              "description": "Checks if `key` equals a specified string, case-sensitively.\n\nIf an index exists on `key`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "key_not",
              "description": "Checks if `key` does not equal a specified string, case-sensitively."
            },
            {
              "name": "key_in",
              "description": null
            },
            {
              "name": "key_not_in",
              "description": null
            },
            {
              "name": "key_lt",
              "description": null
            },
            {
              "name": "key_lte",
              "description": null
            },
            {
              "name": "key_gt",
              "description": null
            },
            {
              "name": "key_gte",
              "description": null
            },
            {
              "name": "key_contains",
              "description": "Checks if `key` contains a specified string, case-sensitively."
            },
            {
              "name": "key_not_contains",
              "description": null
            },
            {
              "name": "key_starts_with",
              "description": "Checks if `key` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "key_not_starts_with",
              "description": null
            },
            {
              "name": "key_ends_with",
              "description": "Checks if `key` ends with a specified string, case-sensitively."
            },
            {
              "name": "key_not_ends_with",
              "description": null
            },
            {
              "name": "key_like",
              "description": "Matches `key` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `key`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "key_not_like",
              "description": "Checks if `key` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "value",
              "description": "Checks if `value` equals a specified string, case-sensitively.\n\nIf an index exists on `value`, it can be used.\n\nSee also `like` for a case-insensitive filter."
            },
            {
              "name": "value_not",
              "description": "Checks if `value` does not equal a specified string, case-sensitively."
            },
            {
              "name": "value_in",
              "description": null
            },
            {
              "name": "value_not_in",
              "description": null
            },
            {
              "name": "value_lt",
              "description": null
            },
            {
              "name": "value_lte",
              "description": null
            },
            {
              "name": "value_gt",
              "description": null
            },
            {
              "name": "value_gte",
              "description": null
            },
            {
              "name": "value_contains",
              "description": "Checks if `value` contains a specified string, case-sensitively."
            },
            {
              "name": "value_not_contains",
              "description": null
            },
            {
              "name": "value_starts_with",
              "description": "Checks if `value` starts with a specified string, case-sensitively.\n\nNever uses an index. Consider using `like` (with the `%` placeholder) for a case-insensitive filter that can use an index."
            },
            {
              "name": "value_not_starts_with",
              "description": null
            },
            {
              "name": "value_ends_with",
              "description": "Checks if `value` ends with a specified string, case-sensitively."
            },
            {
              "name": "value_not_ends_with",
              "description": null
            },
            {
              "name": "value_like",
              "description": "Matches `value` against a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)\n\nIf an index exists on `value`, it can be used for the literal prefix (the part until the first placeholder)."
            },
            {
              "name": "value_not_like",
              "description": "Checks if `value` does *not* match a pattern case-insensitively with the following placeholders:\n\n- `%` matches any sequence of characters, including the empty string\n- `_` matches exactly one character\n- `\\` can be used to escape the placeholders (use `\\\\` for a literal backslash)"
            },
            {
              "name": "AND",
              "description": "A field that checks if all filters in the list apply\n\nIf the list is empty, this filter applies to all objects."
            },
            {
              "name": "OR",
              "description": "A field that checks if any of the filters in the list apply.\n\nIf the list is empty, this filter applies to no objects.\n\nNote that only the items in the list *or*-combined; this complete `OR` field is *and*-combined with outer fields in the parent filter type."
            }
          ]
        },
        {
          "name": "SecretKeyOrderBy",
          "description": null,
          "fields": null,
          "inputFields": null
        },
        {
          "name": "Mutation",
          "description": "The Mutation type for the root namespace\n\nFields are executed serially in the order they occur in the selection set (the result of the first field does not see the changes made by the second field). All mutations are executed atomically - if any of them fail, the complete operation is rolled back.",
          "fields": [
            {
              "name": "createCountry",
              "description": "Creates a new Country"
            },
            {
              "name": "updateCountry",
              "description": "Updates an existing Country"
            },
            {
              "name": "updateAllCountries",
              "description": "Updates Countries that match a specified filter"
            },
            {
              "name": "deleteCountry",
              "description": "Deletes a Country by id or isoCode.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "deleteAllCountries",
              "description": "Deletes Countries that match a specified filter"
            },
            {
              "name": "createDelivery",
              "description": "Creates a new Delivery"
            },
            {
              "name": "updateDelivery",
              "description": "Updates an existing Delivery"
            },
            {
              "name": "updateAllDeliveries",
              "description": "Updates Deliveries that match a specified filter"
            },
            {
              "name": "deleteDelivery",
              "description": "Deletes a Delivery by id or deliveryNumber.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "deleteAllDeliveries",
              "description": "Deletes Deliveries that match a specified filter"
            },
            {
              "name": "createForwarder",
              "description": "Creates a new Forwarder"
            },
            {
              "name": "updateForwarder",
              "description": "Updates an existing Forwarder"
            },
            {
              "name": "updateAllForwarders",
              "description": "Updates Forwarders that match a specified filter"
            },
            {
              "name": "deleteForwarder",
              "description": "Deletes a Forwarder by id or name.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "deleteAllForwarders",
              "description": "Deletes Forwarders that match a specified filter"
            },
            {
              "name": "createOnlyRelations",
              "description": "Creates a new OnlyRelations"
            },
            {
              "name": "updateOnlyRelations",
              "description": "Updates an existing OnlyRelations"
            },
            {
              "name": "deleteOnlyRelations",
              "description": "Deletes a OnlyRelations by id"
            },
            {
              "name": "deleteAllOnlyRelations",
              "description": "Deletes OnlyRelations that match a specified filter"
            },
            {
              "name": "createHandlingUnit",
              "description": "Creates a new HandlingUnit"
            },
            {
              "name": "updateHandlingUnit",
              "description": "Updates an existing HandlingUnit"
            },
            {
              "name": "updateAllHandlingUnits",
              "description": "Updates HandlingUnits that match a specified filter"
            },
            {
              "name": "deleteHandlingUnit",
              "description": "Deletes a HandlingUnit by id or id.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "deleteAllHandlingUnits",
              "description": "Deletes HandlingUnits that match a specified filter"
            },
            {
              "name": "createNumberRange",
              "description": "Creates a new NumberRange"
            },
            {
              "name": "updateNumberRange",
              "description": "Updates an existing NumberRange"
            },
            {
              "name": "updateAllNumberRanges",
              "description": "Updates NumberRanges that match a specified filter"
            },
            {
              "name": "deleteNumberRange",
              "description": "Deletes a NumberRange by id"
            },
            {
              "name": "deleteAllNumberRanges",
              "description": "Deletes NumberRanges that match a specified filter"
            },
            {
              "name": "createSecretKey",
              "description": "Creates a new SecretKey"
            },
            {
              "name": "updateSecretKey",
              "description": "Updates an existing SecretKey"
            },
            {
              "name": "updateAllSecretKeys",
              "description": "Updates SecretKeys that match a specified filter"
            },
            {
              "name": "deleteSecretKey",
              "description": "Deletes a SecretKey by id or key.\n\nYou should pass a non-null value to exactly one of the arguments."
            },
            {
              "name": "deleteAllSecretKeys",
              "description": "Deletes SecretKeys that match a specified filter"
            }
          ],
          "inputFields": null
        },
        {
          "name": "CreateCountryInput",
          "description": "The create type for the root entity type `Country`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "isoCode",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "totalInvestment",
              "description": null
            }
          ]
        },
        {
          "name": "TranslationInput",
          "description": "The create/update type for the value object type `Translation`.\n\nIf this is used in an update mutation, missing fields are set to `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "languageIsoCode",
              "description": null
            },
            {
              "name": "translation",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateCountryInput",
          "description": "The update type for the root entity type `Country`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Country` to be updated (does not change the `id`)."
            },
            {
              "name": "isoCode",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "totalInvestment",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateAllCountriesInput",
          "description": "The update type for the root entity type `Country`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "isoCode",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "totalInvestment",
              "description": null
            }
          ]
        },
        {
          "name": "CreateDeliveryInput",
          "description": "The create type for the root entity type `Delivery`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveryNumber",
              "description": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery"
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee"
            },
            {
              "name": "contentInfo",
              "description": null
            },
            {
              "name": "dgInfo",
              "description": null
            },
            {
              "name": "items",
              "description": null
            },
            {
              "name": "handlingUnits",
              "description": "Adds `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nIf one of the `HandlingUnits` is already related to a different `Delivery`, these relations are removed first.\n\nThe handling units the items of this delivery are packaged in"
            },
            {
              "name": "createHandlingUnits",
              "description": "Creates new `HandlingUnits` and adds `handlingUnits` relations between them and the new `Delivery`.\n\nThe handling units the items of this delivery are packaged in"
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "shippedAt",
              "description": null
            },
            {
              "name": "totalValue",
              "description": null
            },
            {
              "name": "forwarder",
              "description": "Sets the `forwarder` relation to an existing `Forwarder` by its id."
            },
            {
              "name": "createForwarder",
              "description": "Creates a new `Forwarder` and adds a `forwarder` relation between it and the new `Delivery`."
            },
            {
              "name": "destination",
              "description": null
            },
            {
              "name": "defaultValueString",
              "description": null
            },
            {
              "name": "defaultValueString2",
              "description": null
            },
            {
              "name": "defaultValueInt",
              "description": null
            },
            {
              "name": "defaultValueTrue",
              "description": null
            },
            {
              "name": "defaultValueFalse",
              "description": null
            },
            {
              "name": "defaultValueFloat",
              "description": null
            },
            {
              "name": "defaultValueEnum",
              "description": null
            },
            {
              "name": "pickupDate",
              "description": null
            },
            {
              "name": "pickupTimeStart",
              "description": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null
            },
            {
              "name": "dynamicData",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "enumQuickSearch",
              "description": null
            }
          ]
        },
        {
          "name": "AddressInput",
          "description": "The create/update type for the value object type `Address`.\n\nIf this is used in an update mutation, missing fields are set to `null`.",
          "fields": null,
          "inputFields": [
            {
              "name": "street",
              "description": null
            },
            {
              "name": "city",
              "description": null
            },
            {
              "name": "zipCode",
              "description": null
            },
            {
              "name": "country",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            }
          ]
        },
        {
          "name": "CreateDangerousGoodsInfoInput",
          "description": "The create type for the entity extension type `DangerousGoodsInfo`.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": null
            },
            {
              "name": "flashpoint",
              "description": null
            },
            {
              "name": "notices",
              "description": null
            },
            {
              "name": "details",
              "description": null
            }
          ]
        },
        {
          "name": "CreateDangerousGoodsDetailsInput",
          "description": "The create type for the entity extension type `DangerousGoodsDetails`.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": null
            },
            {
              "name": "comment",
              "description": null
            }
          ]
        },
        {
          "name": "CreateDeliveryItemInput",
          "description": "The create type for the child entity type `DeliveryItem`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "itemNumber",
              "description": null
            },
            {
              "name": "quantity",
              "description": null
            },
            {
              "name": "handlingUnit",
              "description": "Specify the `id` of the `HandlingUnit` to be referenced"
            },
            {
              "name": "dgInfo",
              "description": null
            }
          ]
        },
        {
          "name": "CreateHandlingUnitInput",
          "description": "The create type for the root entity type `HandlingUnit`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "huNumber",
              "description": null
            },
            {
              "name": "delivery",
              "description": "Sets the `delivery` relation to an existing `Delivery` by its id."
            },
            {
              "name": "createDelivery",
              "description": "Creates a new `Delivery` and adds a `delivery` relation between it and the new `HandlingUnit`."
            }
          ]
        },
        {
          "name": "CreateForwarderInput",
          "description": "The create type for the root entity type `Forwarder`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "deliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.\n\nIf one of the `Deliveries` is already related to a different `Forwarder`, these relations are removed first."
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and the new `Forwarder`."
            }
          ]
        },
        {
          "name": "UpdateDeliveryInput",
          "description": "The update type for the root entity type `Delivery`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Delivery` to be updated (does not change the `id`)."
            },
            {
              "name": "deliveryNumber",
              "description": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery"
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee"
            },
            {
              "name": "contentInfo",
              "description": null
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value."
            },
            {
              "name": "addItems",
              "description": "Adds new `DeliveryItems` to the list of `items`"
            },
            {
              "name": "updateItems",
              "description": "Updates `DeliveryItems` in the list of `items`"
            },
            {
              "name": "removeItems",
              "description": "Deletes `DeliveryItems` by ids in the list of `items`"
            },
            {
              "name": "addHandlingUnits",
              "description": "Adds `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nIf one of the `HandlingUnits` is already related to a different `Delivery`, these relations are removed first.\n\nThe handling units the items of this delivery are packaged in"
            },
            {
              "name": "removeHandlingUnits",
              "description": "Removes `handlingUnits` relations to existing `HandlingUnits` by their ids.\n\nThe handling units the items of this delivery are packaged in"
            },
            {
              "name": "createHandlingUnits",
              "description": "Creates new `HandlingUnits` and adds `handlingUnits` relations between them and this `Delivery`.\n\nThe handling units the items of this delivery are packaged in"
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "shippedAt",
              "description": null
            },
            {
              "name": "totalValue",
              "description": null
            },
            {
              "name": "forwarder",
              "description": "Sets the `forwarder` relation to an existing `Forwarder` by its id.\n\nIf this `Delivery` already has a `forwarder` relation, this relation is removed first."
            },
            {
              "name": "createForwarder",
              "description": "Creates a new `Forwarder` and sets the `forwarder` relation to the created object.\n\nIf this `Delivery` already has a `forwarder` relation, this relation is removed first."
            },
            {
              "name": "destination",
              "description": null
            },
            {
              "name": "defaultValueString",
              "description": null
            },
            {
              "name": "defaultValueString2",
              "description": null
            },
            {
              "name": "defaultValueInt",
              "description": null
            },
            {
              "name": "defaultValueTrue",
              "description": null
            },
            {
              "name": "defaultValueFalse",
              "description": null
            },
            {
              "name": "defaultValueFloat",
              "description": null
            },
            {
              "name": "defaultValueEnum",
              "description": null
            },
            {
              "name": "pickupDate",
              "description": null
            },
            {
              "name": "pickupTimeStart",
              "description": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null
            },
            {
              "name": "dynamicData",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "enumQuickSearch",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateDangerousGoodsInfoInput",
          "description": "The update type for the entity extension type `DangerousGoodsInfo`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "unNumber",
              "description": null
            },
            {
              "name": "flashpoint",
              "description": null
            },
            {
              "name": "notices",
              "description": null
            },
            {
              "name": "details",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value."
            }
          ]
        },
        {
          "name": "UpdateDangerousGoodsDetailsInput",
          "description": "The update type for the entity extension type `DangerousGoodsDetails`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "expiryDate",
              "description": null
            },
            {
              "name": "comment",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateDeliveryItemInput",
          "description": "The update type for the child entity type `DeliveryItem`.\n\nIf fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `DeliveryItem` to be updated (does not change the `id`)."
            },
            {
              "name": "itemNumber",
              "description": null
            },
            {
              "name": "quantity",
              "description": null
            },
            {
              "name": "handlingUnit",
              "description": "Specify the `id` of the `HandlingUnit` to be referenced"
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value."
            }
          ]
        },
        {
          "name": "UpdateAllDeliveriesInput",
          "description": "The update type for the root entity type `Delivery`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveryNumber",
              "description": null
            },
            {
              "name": "serialNumbers",
              "description": "The list of serial numbers associated with this delivery"
            },
            {
              "name": "consignee",
              "description": "The address of the delivery's consignee"
            },
            {
              "name": "contentInfo",
              "description": null
            },
            {
              "name": "dgInfo",
              "description": "This field is an entity extension and thus is never 'null' - passing 'null' here does not change the field value."
            },
            {
              "name": "addItems",
              "description": "Adds new `DeliveryItems` to the list of `items`"
            },
            {
              "name": "updateItems",
              "description": "Updates `DeliveryItems` in the list of `items`"
            },
            {
              "name": "removeItems",
              "description": "Deletes `DeliveryItems` by ids in the list of `items`"
            },
            {
              "name": "destinationCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "destinationCountryISOCode",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "originCountry",
              "description": "Specify the `isoCode` of the `Country` to be referenced"
            },
            {
              "name": "shippedAt",
              "description": null
            },
            {
              "name": "totalValue",
              "description": null
            },
            {
              "name": "destination",
              "description": null
            },
            {
              "name": "defaultValueString",
              "description": null
            },
            {
              "name": "defaultValueString2",
              "description": null
            },
            {
              "name": "defaultValueInt",
              "description": null
            },
            {
              "name": "defaultValueTrue",
              "description": null
            },
            {
              "name": "defaultValueFalse",
              "description": null
            },
            {
              "name": "defaultValueFloat",
              "description": null
            },
            {
              "name": "defaultValueEnum",
              "description": null
            },
            {
              "name": "pickupDate",
              "description": null
            },
            {
              "name": "pickupTimeStart",
              "description": null
            },
            {
              "name": "pickupTimeEnd",
              "description": null
            },
            {
              "name": "dynamicData",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "enumQuickSearch",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateForwarderInput",
          "description": "The update type for the root entity type `Forwarder`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `Forwarder` to be updated (does not change the `id`)."
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "addDeliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids.\n\nIf one of the `Deliveries` is already related to a different `Forwarder`, these relations are removed first."
            },
            {
              "name": "removeDeliveries",
              "description": "Removes `deliveries` relations to existing `Deliveries` by their ids."
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and this `Forwarder`."
            }
          ]
        },
        {
          "name": "UpdateAllForwardersInput",
          "description": "The update type for the root entity type `Forwarder`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null
            }
          ]
        },
        {
          "name": "CreateOnlyRelationsInput",
          "description": "The create type for the root entity type `OnlyRelations`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "deliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids."
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and the new `OnlyRelations`."
            }
          ]
        },
        {
          "name": "UpdateOnlyRelationsInput",
          "description": "The update type for the root entity type `OnlyRelations`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `OnlyRelations` to be updated (does not change the `id`)."
            },
            {
              "name": "addDeliveries",
              "description": "Adds `deliveries` relations to existing `Deliveries` by their ids."
            },
            {
              "name": "removeDeliveries",
              "description": "Removes `deliveries` relations to existing `Deliveries` by their ids."
            },
            {
              "name": "createDeliveries",
              "description": "Creates new `Deliveries` and adds `deliveries` relations between them and this `OnlyRelations`."
            }
          ]
        },
        {
          "name": "UpdateHandlingUnitInput",
          "description": "The update type for the root entity type `HandlingUnit`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `HandlingUnit` to be updated (does not change the `id`)."
            },
            {
              "name": "huNumber",
              "description": null
            },
            {
              "name": "delivery",
              "description": "Sets the `delivery` relation to an existing `Delivery` by its id.\n\nIf this `HandlingUnit` already has a `delivery` relation, this relation is removed first."
            },
            {
              "name": "createDelivery",
              "description": "Creates a new `Delivery` and sets the `delivery` relation to the created object.\n\nIf this `HandlingUnit` already has a `delivery` relation, this relation is removed first."
            }
          ]
        },
        {
          "name": "UpdateAllHandlingUnitsInput",
          "description": "The update type for the root entity type `HandlingUnit`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "huNumber",
              "description": null
            }
          ]
        },
        {
          "name": "CreateNumberRangeInput",
          "description": "The create type for the root entity type `NumberRange`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "number",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateNumberRangeInput",
          "description": "The update type for the root entity type `NumberRange`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `NumberRange` to be updated (does not change the `id`)."
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "number",
              "description": null
            },
            {
              "name": "addTo_number",
              "description": null
            },
            {
              "name": "multiplyWith_number",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateAllNumberRangesInput",
          "description": "The update type for the root entity type `NumberRange`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "number",
              "description": null
            },
            {
              "name": "addTo_number",
              "description": null
            },
            {
              "name": "multiplyWith_number",
              "description": null
            }
          ]
        },
        {
          "name": "CreateSecretKeyInput",
          "description": "The create type for the root entity type `SecretKey`.\n\nThe fields `id`, `createdAt`, and `updatedAt` are set automatically.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null
            },
            {
              "name": "value",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateSecretKeyInput",
          "description": "The update type for the root entity type `SecretKey`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "The `id` of the `SecretKey` to be updated (does not change the `id`)."
            },
            {
              "name": "key",
              "description": null
            },
            {
              "name": "value",
              "description": null
            }
          ]
        },
        {
          "name": "UpdateAllSecretKeysInput",
          "description": "The update type for the root entity type `SecretKey`.\n\nThe `updatedAt` field is updated automatically unless only relations are updated. If fields are omitted, their value is left unchanged. Explicitly set fields to `null` to clear their value.",
          "fields": null,
          "inputFields": [
            {
              "name": "key",
              "description": null
            },
            {
              "name": "value",
              "description": null
            }
          ]
        },
        {
          "name": "__Schema",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types",
              "description": "A list of all types supported by this server."
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at."
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at."
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at."
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server."
            }
          ],
          "inputFields": null
        },
        {
          "name": "__Type",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind",
              "description": null
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "fields",
              "description": null
            },
            {
              "name": "interfaces",
              "description": null
            },
            {
              "name": "possibleTypes",
              "description": null
            },
            {
              "name": "enumValues",
              "description": null
            },
            {
              "name": "inputFields",
              "description": null
            },
            {
              "name": "ofType",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null
        },
        {
          "name": "__Field",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "args",
              "description": null
            },
            {
              "name": "type",
              "description": null
            },
            {
              "name": "isDeprecated",
              "description": null
            },
            {
              "name": "deprecationReason",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__InputValue",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "type",
              "description": null
            },
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value."
            }
          ],
          "inputFields": null
        },
        {
          "name": "__EnumValue",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "isDeprecated",
              "description": null
            },
            {
              "name": "deprecationReason",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__Directive",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "name",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "locations",
              "description": null
            },
            {
              "name": "args",
              "description": null
            }
          ],
          "inputFields": null
        },
        {
          "name": "__DirectiveLocation",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null
        }
      ]
    }
  }
}