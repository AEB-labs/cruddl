RETURN (
  FOR v_currentEntity1
  IN (
    FOR v_delivery1
    IN @@deliveries
    FILTER (v_delivery1._key == @var1)
    LIMIT @var2
    RETURN v_delivery1
  )
  UPDATE v_currentEntity1
  WITH {}
  IN @@deliveries
  OPTIONS { mergeObjects: false }
  RETURN NEW._key
)

// --------------------------------

RETURN FIRST(
  INSERT @var1 IN @@forwarders
  RETURN NEW._key
)

// --------------------------------

RETURN (
  UPSERT {_from: CONCAT(@var1, FIRST(@v_updatedIds1))}
  INSERT {_from: CONCAT(@var2, FIRST(@v_updatedIds1)), _to: CONCAT(@var3, @v_newEntityId1)}
  UPDATE {_from: CONCAT(@var4, FIRST(@v_updatedIds1)), _to: CONCAT(@var5, @v_newEntityId1)}
  IN @@deliveries_forwarder
)

// --------------------------------

WITH @@deliveries, @@forwarders
LET v_delivery1 = DOCUMENT(@@deliveries, @var1)
LET v_forwarder1 = FIRST((
  FOR v_node1
  IN OUTBOUND v_delivery1 @@deliveries_forwarder
  FILTER v_node1 != null
  RETURN v_node1
))
RETURN (IS_NULL(v_delivery1) ? null : {
  "forwarder": (IS_NULL(v_forwarder1) ? null : {
    "name": v_forwarder1.`name`
  })
})

// --------------------------------

WITH @@deliveries, @@forwarders
RETURN {
  "updateDelivery": @v_updateDelivery1
}
