mutation prepare {
    updateHandlingUnit(input: { id: "@{ids/HandlingUnit/1}", delivery:  "@{ids/Delivery/1}" }) {
        huNumber
    }
}

query select {
    Delivery(id: "@{ids/Delivery/1}") {
        deliveryNumber
        totalValue
        forwarder {
            name
        }
    }

    allDeliveries(filter: { id: "@{ids/Delivery/1}" }) {
        deliveryNumber
        totalValue
    }

    HandlingUnit(id: "@{ids/HandlingUnit/1}") {
        delivery {
            deliveryNumber
            totalValue
        }
    }

    foundation {
        Country(isoCode: "DE") {
            isoCode
            totalInvestment
        }
    }
}

# this is separate because they are non-nullable and tus set the whole data property to null
query selectMeta {
    # these are forbidden on type level
    allForwarders {
        name
    }

    _allForwardersMeta {
        count
    }
}

query filter {
    direct: allDeliveries(filter: { id: "@{ids/Delivery/1}", totalValue: "EUR 5.50"}) {
        deliveryNumber
    }

    simple: SecretKey(key: "42") {
        value
    }

    startsWith: allDeliveries(filter: { id: "@{ids/Delivery/1}", totalValue_starts_with: "EUR"}) {
        deliveryNumber
    }

    throughRelation: allHandlingUnits(filter: { id: "@{ids/HandlingUnit/1}", delivery: {totalValue: "EUR 5.50"}}) {
        huNumber
    }

    toUnaccessibleEntity: allDeliveries(filter: { id: "@{ids/Delivery/1}", forwarder: {name: "DHL"}}) {
        deliveryNumber
    }
}

query sort {
    direct: allDeliveries(filter: { id: "@{ids/Delivery/1}" }, orderBy: totalValue_ASC) {
        deliveryNumber
    }

    throughRelation: allHandlingUnits(filter: { id: "@{ids/Delivery/1}" }, orderBy: delivery_totalValue_DESC) {
        huNumber
    }
}

mutation create {
    createDelivery(input: {totalValue: "EUR 5.50"}) {
        deliveryNumber
    }

    createForwarder(input: { name: "DPD"}) {
        name
    }
}

mutation update {
    updateDelivery(input: { id: "@{ids/Delivery/1}", totalValue: "EUR 5.50"}) {
        deliveryNumber
    }

    updateForwarder(input: { id: "@{ids/Forwarder/1}", name: "DPD"}) {
        name
    }
}

mutation delete {
    deleteForwarder(id: "@{ids/Forwarder/1}") {
        name
    }
}