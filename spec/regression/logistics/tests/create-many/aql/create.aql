RETURN (
  FOR v_entity1 IN @var1
  INSERT v_entity1 IN @@deliveries
  RETURN NEW._key
)

// --------------------------------

WITH @@handlingUnits
RETURN DOCUMENT(@@handlingUnits, @var1)

// --------------------------------

WITH @@handlingUnits
RETURN DOCUMENT(@@handlingUnits, @var1)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_to1 IN @var1
  FOR v_edge1 IN @@deliveries_handlingUnits
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_edge1
  IN [ {_from: CONCAT(@var1, (@v_newEntityIds1)[@var2]), _to: @var3}, {_from: CONCAT(@var4, (@v_newEntityIds1)[@var5]), _to: @var6} ]
  UPSERT { _from: v_edge1._from, _to: v_edge1._to }
  INSERT v_edge1
  UPDATE {}
  IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_entity1 IN @var1
  INSERT v_entity1 IN @@handlingUnits
  RETURN NEW._key
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_edge1
  IN [ {_from: CONCAT(@var1, (@v_newEntityIds1)[@var2]), _to: CONCAT(@var3, (@v_newEntityIds2)[@var4])} ]
  UPSERT { _from: v_edge1._from, _to: v_edge1._to }
  INSERT v_edge1
  UPDATE {}
  IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits
RETURN DOCUMENT(@@handlingUnits, @var1)

// --------------------------------

WITH @@handlingUnits
RETURN DOCUMENT(@@handlingUnits, @var1)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_to1 IN @var1
  FOR v_edge1 IN @@deliveries_handlingUnits
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_edge1
  IN [ {_from: CONCAT(@var1, (@v_newEntityIds1)[@var2]), _to: @var3}, {_from: CONCAT(@var4, (@v_newEntityIds1)[@var5]), _to: @var6} ]
  UPSERT { _from: v_edge1._from, _to: v_edge1._to }
  INSERT v_edge1
  UPDATE {}
  IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_entity1 IN @var1
  INSERT v_entity1 IN @@handlingUnits
  RETURN NEW._key
)

// --------------------------------

WITH @@handlingUnits
RETURN (
  FOR v_edge1
  IN [ {_from: CONCAT(@var1, (@v_newEntityIds1)[@var2]), _to: CONCAT(@var3, (@v_newEntityIds2)[@var4])} ]
  UPSERT { _from: v_edge1._from, _to: v_edge1._to }
  INSERT v_edge1
  UPDATE {}
  IN @@deliveries_handlingUnits
)

// --------------------------------

WITH @@handlingUnits, @@deliveries
LET v_entity1 = DOCUMENT(@@deliveries, (@v_newEntityIds1)[@var1])
RETURN (
  UPSERT {
              key: @var2,
              type: @var3
          }
  INSERT {

          key: @var4,
          type: @var5,
          category: null,
          quantity: null,
          isExported: false,
          createdAt: @var6,
          updatedAt: @var7,
              isConfirmedForExport: false
           }
  UPDATE (OLD.isConfirmedForExport ? {} : {
              updatedAt: @var8,
              category: null,
              quantity: null
          })
  IN @@billingEntities
  RETURN @var9
)

// --------------------------------

WITH @@handlingUnits, @@deliveries
LET v_entity1 = DOCUMENT(@@deliveries, (@v_newEntityIds1)[@var1])
RETURN (
  UPSERT {
              key: @var2,
              type: @var3
          }
  INSERT {

          key: @var4,
          type: @var5,
          category: null,
          quantity: null,
          isExported: false,
          createdAt: @var6,
          updatedAt: @var7,
              isConfirmedForExport: false
           }
  UPDATE (OLD.isConfirmedForExport ? {} : {
              updatedAt: @var8,
              category: null,
              quantity: null
          })
  IN @@billingEntities
  RETURN @var9
)

// --------------------------------

WITH @@handlingUnits, @@deliveries
RETURN (
  FOR v_delivery1
  IN (
    FOR v_id1
    IN @v_newEntityIds1
    RETURN DOCUMENT(@@deliveries, v_id1)
  )
  LET v_country1 = (IS_NULL(v_delivery1.`consignee`.`country`) ? null : FIRST((
    FOR v_country2
    IN @@countries
    FILTER ((v_country2.`isoCode` > NULL) && (v_country2.`isoCode` == v_delivery1.`consignee`.`country`))
    LIMIT @var1
    RETURN v_country2
  )))
  LET v_country3 = (IS_NULL(v_delivery1.`destinationCountryISOCode`) ? null : FIRST((
    FOR v_destinationCountry1
    IN @@countries
    FILTER ((v_destinationCountry1.`isoCode` > NULL) && (v_destinationCountry1.`isoCode` == v_delivery1.`destinationCountryISOCode`))
    LIMIT @var2
    RETURN v_destinationCountry1
  )))
  RETURN {
    "deliveryNumber": v_delivery1.`deliveryNumber`,
    "consignee": (IS_NULL(v_delivery1.`consignee`) ? null : {
      "city": v_delivery1.`consignee`.`city`,
      "country": (IS_NULL(v_country1) ? null : {
        "isoCode": v_country1.`isoCode`,
        "description": (
          FOR v_translation1
          IN (IS_LIST(v_country1.`description`) ? v_country1.`description` : [])
          RETURN {
            "languageIsoCode": v_translation1.`languageIsoCode`,
            "translation": v_translation1.`translation`
          }
        )
      }),
      "street": v_delivery1.`consignee`.`street`
    }),
    "contentInfo": (
      FOR v_translation2
      IN (IS_LIST(v_delivery1.`contentInfo`) ? v_delivery1.`contentInfo` : [])
      RETURN {
        "translation": v_translation2.`translation`,
        "languageIsoCode": v_translation2.`languageIsoCode`
      }
    ),
    "destinationCountry": (IS_NULL(v_country3) ? null : {
      "isoCode": v_country3.`isoCode`
    }),
    "dgInfo": {
      "flashpoint": v_delivery1.`dgInfo`.`flashpoint`,
      "unNumber": v_delivery1.`dgInfo`.`unNumber`,
      "notices": (IS_LIST(v_delivery1.`dgInfo`.`notices`) ? v_delivery1.`dgInfo`.`notices` : [])
    },
    "serialNumbers": (IS_LIST(v_delivery1.`serialNumbers`) ? v_delivery1.`serialNumbers` : []),
    "items": (
      FOR v_deliveryItem1
      IN (IS_LIST(v_delivery1.`items`) ? v_delivery1.`items` : [])
      RETURN {
        "itemNumber": v_deliveryItem1.`itemNumber`
      }
    ),
    "handlingUnits": (
      FOR v_handlingUnit1
      IN OUTBOUND v_delivery1 @@deliveries_handlingUnits
      FILTER v_handlingUnit1 != null
      SORT (v_handlingUnit1.`huNumber`)
      RETURN {
        "huNumber": v_handlingUnit1.`huNumber`
      }
    )
  }
)

// --------------------------------

WITH @@handlingUnits, @@deliveries
RETURN {
  "createDeliveries": @v_createDeliveries1
}
