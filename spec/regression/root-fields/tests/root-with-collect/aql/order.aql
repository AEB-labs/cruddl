WITH @@roots
RETURN {
  "allRoot2s": (
    FOR v_root21
    IN @@root2s
    RETURN {
      "name": v_root21.`name`,
      "roots": (
        FOR v_root1
        IN OUTBOUND v_root21 @@root2s_roots
        FILTER v_root1 != null
        SORT (v_root1.`name`)
        RETURN {
          "grandchildren": (
            FOR v_grandchild1
            IN v_root1.`children`[*].`children`[*][**]
            SORT (v_grandchild1.`name`)
            RETURN {
              "name": v_grandchild1.`name`,
              "root": {
                "name": v_root1.`name`
              }
            }
          ),
          "grandchildrenReverse": (
            FOR v_grandchild2
            IN v_root1.`children`[*].`children`[*][**]
            SORT (v_grandchild2.`name`)  DESC
            RETURN {
              "name": v_grandchild2.`name`,
              "root": {
                "name": v_root1.`name`
              }
            }
          ),
          "extensionGrandchildren": (
            FOR v_extensionGrandchild1
            IN v_root1.`children`[*].`extension`.`children`[*][**]
            SORT (v_extensionGrandchild1.`name`)
            RETURN {
              "name": v_extensionGrandchild1.`name`,
              "root": {
                "name": v_root1.`name`
              }
            }
          ),
          "extensionGrandchildrenReverse": (
            FOR v_extensionGrandchild2
            IN v_root1.`children`[*].`extension`.`children`[*][**]
            SORT (v_extensionGrandchild2.`name`)  DESC
            RETURN {
              "name": v_extensionGrandchild2.`name`,
              "root": {
                "name": v_root1.`name`
              }
            }
          )
        }
      ),
      "rootGrandchildren": (
        FOR v_grandchild3
        IN (
          FOR v_node1, v_edge1, v_path1 IN @var1..@var2 OUTBOUND v_root21 @@root2s_roots
          FILTER v_node1 != null
          RETURN (
            FOR v_entity1 IN v_node1.`children`[*].`children`[*][**]
            RETURN { obj: v_entity1, root: v_node1 }
          )
        )[**]
        SORT (v_grandchild3.`obj`.`name`)
        RETURN {
          "name": v_grandchild3.`obj`.`name`,
          "root": {
            "name": v_grandchild3.`root`.`name`
          }
        }
      ),
      "rootGrandchildrenReverse": (
        FOR v_grandchild4
        IN (
          FOR v_node2, v_edge2, v_path2 IN @var3..@var4 OUTBOUND v_root21 @@root2s_roots
          FILTER v_node2 != null
          RETURN (
            FOR v_entity2 IN v_node2.`children`[*].`children`[*][**]
            RETURN { obj: v_entity2, root: v_node2 }
          )
        )[**]
        SORT (v_grandchild4.`obj`.`name`)  DESC
        RETURN {
          "name": v_grandchild4.`obj`.`name`,
          "root": {
            "name": v_grandchild4.`root`.`name`
          }
        }
      ),
      "rootExtensionGrandchildren": (
        FOR v_extensionGrandchild3
        IN (
          FOR v_node3, v_edge3, v_path3 IN @var5..@var6 OUTBOUND v_root21 @@root2s_roots
          FILTER v_node3 != null
          RETURN (
            FOR v_entity3 IN v_node3.`children`[*].`extension`.`children`[*][**]
            RETURN { obj: v_entity3, root: v_node3 }
          )
        )[**]
        SORT (v_extensionGrandchild3.`obj`.`name`)
        RETURN {
          "name": v_extensionGrandchild3.`obj`.`name`,
          "root": {
            "name": v_extensionGrandchild3.`root`.`name`
          }
        }
      ),
      "rootExtensionGrandchildrenReverse": (
        FOR v_extensionGrandchild4
        IN (
          FOR v_node4, v_edge4, v_path4 IN @var7..@var8 OUTBOUND v_root21 @@root2s_roots
          FILTER v_node4 != null
          RETURN (
            FOR v_entity4 IN v_node4.`children`[*].`extension`.`children`[*][**]
            RETURN { obj: v_entity4, root: v_node4 }
          )
        )[**]
        SORT (v_extensionGrandchild4.`obj`.`name`)  DESC
        RETURN {
          "name": v_extensionGrandchild4.`obj`.`name`,
          "root": {
            "name": v_extensionGrandchild4.`root`.`name`
          }
        }
      )
    }
  )
}
