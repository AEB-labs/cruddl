RETURN (
  FOR v_main1
  IN @@mains
  FILTER (v_main1.`key` == @var1)
  LIMIT @var2
  RETURN v_main1._key
)

// --------------------------------

WITH @@mains
RETURN MINUS((
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@mains_blockingMains
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
), @v_ids1)

// --------------------------------

WITH @@mains
RETURN (
  FOR v_from1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_blockingMains
  FILTER v_edge1._from == v_from1
  REMOVE v_edge1 IN @@mains_blockingMains
)

// --------------------------------

WITH @@mains, @@blockers
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@mains_blockers
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers
RETURN (
  FOR v_from1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_blockers
  FILTER v_edge1._from == v_from1
  REMOVE v_edge1 IN @@mains_blockers
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@mains_alternativeDependents
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@dependents_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@dependents_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents
RETURN (
  FOR v_alternativeDependent1
  IN @v_alternativeDependentsIDs1
  REMOVE v_alternativeDependent1
  IN @@alternativeDependents
  RETURN OLD
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@mains_additionalDependent
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_additionalDependentIDs1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@dependents_blockers
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_from1 IN (FOR v_id1 IN @v_additionalDependentIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@dependents_blockers
  FILTER v_edge1._from == v_from1
  REMOVE v_edge1 IN @@dependents_blockers
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_additionalDependentIDs1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@dependents_alternativeDependents
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@dependents_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@dependents_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_alternativeDependent1
  IN @v_alternativeDependentsIDs1
  REMOVE v_alternativeDependent1
  IN @@alternativeDependents
  RETURN OLD
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_additionalDependentIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_dependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_dependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_additionalDependentIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_additionalDependent
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_additionalDependent
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_dependent1
  IN @v_additionalDependentIDs1
  REMOVE v_dependent1
  IN @@dependents
  RETURN OLD
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@mains_dependents
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_dependentsIDs1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@dependents_blockers
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_from1 IN (FOR v_id1 IN @v_dependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@dependents_blockers
  FILTER v_edge1._from == v_from1
  REMOVE v_edge1 IN @@dependents_blockers
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_item1
  IN (
    FOR v_sourceEntity1 IN (FOR v_id1 IN @v_dependentsIDs1 RETURN CONCAT(@var1, v_id1))
    FOR v_node1, v_edge1, v_path1 IN @var2..@var3 OUTBOUND v_sourceEntity1 @@dependents_alternativeDependents
    FILTER v_node1 != null
    RETURN v_node1
  )
  RETURN v_item1._key
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_alternativeDependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@dependents_alternativeDependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@dependents_alternativeDependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_alternativeDependent1
  IN @v_alternativeDependentsIDs1
  REMOVE v_alternativeDependent1
  IN @@alternativeDependents
  RETURN OLD
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_dependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_dependents
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_dependents
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_dependentsIDs1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_additionalDependent
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_additionalDependent
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_dependent1
  IN @v_dependentsIDs1
  REMOVE v_dependent1
  IN @@dependents
  RETURN OLD
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN (
  FOR v_to1 IN (FOR v_id1 IN @v_ids1 RETURN CONCAT(@var1, v_id1))
  FOR v_edge1 IN @@mains_blockingMains
  FILTER v_edge1._to == v_to1
  REMOVE v_edge1 IN @@mains_blockingMains
)

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
LET v_main1 = FIRST((
  FOR v_main2
  IN @v_ids1
  REMOVE v_main2
  IN @@mains
  RETURN OLD
))
RETURN (IS_NULL(v_main1) ? null : {
  "key": v_main1.`key`
})

// --------------------------------

WITH @@mains, @@blockers, @@alternativeDependents, @@dependents
RETURN {
  "deleteMain": @v_deleteMain1
}
